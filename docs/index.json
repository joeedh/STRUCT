[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "__myFormatTag": 3,
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "__myFormatTag": 4,
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "__myFormatTag": 5,
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "__myFormatTag": 6,
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "__myFormatTag": 7,
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "__myFormatTag": 8,
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "__myFormatTag": 9,
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "__myFormatTag": 10,
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "__myFormatTag": 11,
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "__myFormatTag": 12,
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "__myFormatTag": 13,
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "__myFormatTag": 14,
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "__myFormatTag": 15,
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "__myFormatTag": 16,
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "__myFormatTag": 17,
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "__myFormatTag": 18,
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "__myFormatTag": 19,
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "__myFormatTag": 20,
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "__myFormatTag": 21,
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "__myFormatTag": 22,
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "__myFormatTag": 23,
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "__myFormatTag": 24,
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "__myFormatTag": 25,
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "__myFormatTag": 26,
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "__myFormatTag": 27,
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "__myFormatTag": 28,
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "__myFormatTag": 29,
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "__myFormatTag": 30,
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "__myFormatTag": 31,
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "__myFormatTag": 32,
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "__myFormatTag": 33,
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "__myFormatTag": 34,
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "__myFormatTag": 35,
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "__myFormatTag": 36,
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "__myFormatTag": 37,
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "__myFormatTag": 38,
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "__myFormatTag": 39,
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "__myFormatTag": 40,
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "__myFormatTag": 41,
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "__myFormatTag": 42,
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "__myFormatTag": 43,
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "__myFormatTag": 44,
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "__myFormatTag": 45,
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "__myFormatTag": 46,
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "__myFormatTag": 47,
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "__myFormatTag": 48,
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "__myFormatTag": 49,
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/polyfill.js",
    "content": "if (Array.prototype.pop_i == undefined) {\r\n  Array.prototype.pop_i = function (idx) {\r\n    if (idx < 0 || idx >= this.length) {\r\n      throw new Error(\"Index out of range\");\r\n    }\r\n\r\n    while (idx < this.length) {\r\n      this[idx] = this[idx + 1];\r\n    }\r\n\r\n    this.length -= 1;\r\n  }\r\n}\r\n\r\nif (Array.prototype.remove == undefined) {\r\n  Array.prototype.remove = function (item, suppress_error) {\r\n    var i = this.indexOf(item);\r\n\r\n    if (i < 0) {\r\n      if (suppress_error)\r\n        console.trace(\"Warning: item not in array\", item);\r\n      else\r\n        throw new Error(\"Error: item not in array \" + item);\r\n\r\n      return;\r\n    }\r\n\r\n    this.pop_i(i);\r\n  }\r\n}\r\n\r\nif (String.prototype.contains == undefined) {\r\n  String.prototype.contains = function (substr) {\r\n    return String.search(substr) != null;\r\n  }\r\n}\r\n\r\nString.prototype.__keystr__ = function () {\r\n  return this;\r\n}\r\n\r\nNumber.prototype.__keystr__ = Boolean.prototype.__keystr__ = function () {\r\n  return \"\" + this;\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/dev/nstructjs/src/polyfill.js",
    "access": "public",
    "description": null,
    "lineNumber": 1,
    "__myFormatTag": 50
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "__keystr__",
    "memberof": "src/polyfill.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/polyfill.js~__keystr__",
    "access": "private",
    "export": false,
    "importPath": "nstructjs/src/polyfill.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "__myFormatTag": 51,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "static": true,
    "access": "public",
    "content": "if (typeof window !== \"undefined\") {\r\n  window._nGlobal = window;\r\n} else if (typeof self !== \"undefined\") {\r\n  self._nGlobal = self;\r\n} else {\r\n  global._nGlobal = global;\r\n}\r\n\r\nlet struct_intern = require(\"./struct_intern\");\r\nlet struct_filehelper = require(\"./struct_filehelper\");\r\nlet struct_util = require(\"./struct_util\");\r\nlet struct_binpack = require(\"./struct_binpack\");\r\nlet struct_parseutil = require(\"./struct_parseutil\");\r\nlet struct_typesystem = require(\"./struct_typesystem\");\r\nlet struct_parser = require(\"./struct_parser\");\r\n\r\nObject.defineProperty(exports, \"STRUCT_ENDIAN\", {\r\n  get: function () {\r\n    return struct_binpack.STRUCT_ENDIAN;\r\n  },\r\n  set: function (val) {\r\n    struct_binpack.STRUCT_ENDIAN = val;\r\n  }\r\n});\r\n\r\nfor (let k in struct_intern) {\r\n  exports[k] = struct_intern[k];\r\n}\r\n\r\nvar StructTypeMap = struct_parser.StructTypeMap;\r\nvar StructTypes = struct_parser.StructTypes;\r\nvar Class = struct_typesystem.Class;\r\n\r\n//forward struct_intern's exports\r\nfor (var k in struct_intern) {\r\n  exports[k] = struct_intern[k];\r\n}\r\n\r\n/** Register a class with nstructjs **/\r\nexports.register = function register(cls, name) {\r\n  return exports.manager.register(cls, name);\r\n}\r\nexports.inherit = function () {\r\n  return exports.STRUCT.inherit(...arguments);\r\n}\r\n\r\nexports.setDebugMode = struct_intern.setDebugMode;\r\n\r\n//export other modules\r\nexports.binpack = struct_binpack;\r\nexports.util = struct_util;\r\nexports.typesystem = struct_typesystem;\r\nexports.parseutil = struct_parseutil;\r\nexports.parser = struct_parser;\r\nexports.filehelper = struct_filehelper;\r\n",
    "description": null,
    "longname": "C:/dev/nstructjs/src/structjs.js",
    "kind": "file",
    "name": "src/structjs.js",
    "__myFormatTag": 208
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "struct_intern",
    "memberof": "src/structjs.js",
    "static": true,
    "longname": "src/structjs.js~struct_intern",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "__myFormatTag": 53,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "struct_filehelper",
    "memberof": "src/structjs.js",
    "static": true,
    "longname": "src/structjs.js~struct_filehelper",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "__myFormatTag": 54,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "struct_util",
    "memberof": "src/structjs.js",
    "static": true,
    "longname": "src/structjs.js~struct_util",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "__myFormatTag": 55,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "struct_binpack",
    "memberof": "src/structjs.js",
    "static": true,
    "longname": "src/structjs.js~struct_binpack",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "__myFormatTag": 56,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "struct_parseutil",
    "memberof": "src/structjs.js",
    "static": true,
    "longname": "src/structjs.js~struct_parseutil",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "__myFormatTag": 57,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "struct_typesystem",
    "memberof": "src/structjs.js",
    "static": true,
    "longname": "src/structjs.js~struct_typesystem",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "__myFormatTag": 58,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "struct_parser",
    "memberof": "src/structjs.js",
    "static": true,
    "longname": "src/structjs.js~struct_parser",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "__myFormatTag": 59,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "StructTypeMap",
    "memberof": "src/structjs.js",
    "static": true,
    "longname": "src/structjs.js~StructTypeMap",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "__myFormatTag": 60,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "StructTypes",
    "memberof": "src/structjs.js",
    "static": true,
    "longname": "src/structjs.js~StructTypes",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "__myFormatTag": 61,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "Class",
    "memberof": "src/structjs.js",
    "static": true,
    "longname": "src/structjs.js~Class",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "__myFormatTag": 62,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "<pre>* Register a class with nstructjs *</pre>",
    "kind": "function",
    "name": "register",
    "longname": "src/structjs.js~register",
    "memberof": "src/structjs.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "cls",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 211
      },
      {
        "description": "",
        "name": "name",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 213
      }
    ],
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": "{register}",
    "export": "true",
    "__myFormatTag": 209,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "<pre>* Register a class with nstructjs *</pre>",
    "kind": "function",
    "name": "inherit",
    "longname": "src/structjs.js~inherit",
    "memberof": "src/structjs.js",
    "generator": false,
    "params": [],
    "importPath": "nstructjs/src/structjs.js",
    "importStyle": "{inherit}",
    "export": "true",
    "__myFormatTag": 215,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "static": true,
    "access": "public",
    "content": "let struct_util = require(\"./struct_util\");\r\nlet struct_typesystem = require(\"./struct_typesystem\");\r\n\r\nexports.STRUCT_ENDIAN = true; //little endian\r\n\r\nvar Class = struct_typesystem.Class;\r\n\r\nvar temp_dataview = new DataView(new ArrayBuffer(16));\r\nvar uint8_view = new Uint8Array(temp_dataview.buffer);\r\n\r\nvar unpack_context = exports.unpack_context = Class([\r\n  function constructor() {\r\n    this.i = 0;\r\n  }\r\n]);\r\n\r\nvar pack_byte = exports.pack_byte = function (array, val) {\r\n  array.push(val);\r\n}\r\n\r\nvar pack_bytes = exports.pack_bytes = function (array, bytes) {\r\n  for (var i = 0; i < bytes.length; i++) {\r\n    array.push(bytes[i]);\r\n  }\r\n}\r\n\r\nvar pack_int = exports.pack_int = function (array, val) {\r\n  temp_dataview.setInt32(0, val, exports.STRUCT_ENDIAN);\r\n\r\n  array.push(uint8_view[0]);\r\n  array.push(uint8_view[1]);\r\n  array.push(uint8_view[2]);\r\n  array.push(uint8_view[3]);\r\n}\r\n\r\nexports.pack_float = function (array, val) {\r\n  temp_dataview.setFloat32(0, val, exports.STRUCT_ENDIAN);\r\n\r\n  array.push(uint8_view[0]);\r\n  array.push(uint8_view[1]);\r\n  array.push(uint8_view[2]);\r\n  array.push(uint8_view[3]);\r\n}\r\n\r\nexports.pack_double = function (array, val) {\r\n  temp_dataview.setFloat64(0, val, exports.STRUCT_ENDIAN);\r\n\r\n  array.push(uint8_view[0]);\r\n  array.push(uint8_view[1]);\r\n  array.push(uint8_view[2]);\r\n  array.push(uint8_view[3]);\r\n  array.push(uint8_view[4]);\r\n  array.push(uint8_view[5]);\r\n  array.push(uint8_view[6]);\r\n  array.push(uint8_view[7]);\r\n}\r\n\r\nexports.pack_short = function (array, val) {\r\n  temp_dataview.setInt16(0, val, exports.STRUCT_ENDIAN);\r\n\r\n  array.push(uint8_view[0]);\r\n  array.push(uint8_view[1]);\r\n}\r\n\r\nvar encode_utf8 = exports.encode_utf8 = function encode_utf8(arr, str) {\r\n  for (var i = 0; i < str.length; i++) {\r\n    var c = str.charCodeAt(i);\r\n\r\n    while (c != 0) {\r\n      var uc = c & 127;\r\n      c = c >> 7;\r\n\r\n      if (c != 0)\r\n        uc |= 128;\r\n\r\n      arr.push(uc);\r\n    }\r\n  }\r\n}\r\n\r\nvar decode_utf8 = exports.decode_utf8 = function decode_utf8(arr) {\r\n  var str = \"\"\r\n  var i = 0;\r\n\r\n  while (i < arr.length) {\r\n    var c = arr[i];\r\n    var sum = c & 127;\r\n    var j = 0;\r\n    var lasti = i;\r\n\r\n    while (i < arr.length && (c & 128)) {\r\n      j += 7;\r\n      i++;\r\n      c = arr[i];\r\n\r\n      c = (c & 127) << j;\r\n      sum |= c;\r\n    }\r\n\r\n    if (sum == 0) break;\r\n\r\n    str += String.fromCharCode(sum);\r\n    i++;\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nvar test_utf8 = exports.test_utf8 = function test_utf8() {\r\n  var s = \"a\" + String.fromCharCode(8800) + \"b\";\r\n  var arr = [];\r\n\r\n  encode_utf8(arr, s);\r\n  var s2 = decode_utf8(arr);\r\n\r\n  if (s != s2) {\r\n    throw new Error(\"UTF-8 encoding/decoding test failed\");\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction truncate_utf8(arr, maxlen) {\r\n  var len = Math.min(arr.length, maxlen);\r\n\r\n  var last_codepoint = 0;\r\n  var last2 = 0;\r\n\r\n  var incode = false;\r\n  var i = 0;\r\n  var code = 0;\r\n  while (i < len) {\r\n    incode = arr[i] & 128;\r\n\r\n    if (!incode) {\r\n      last2 = last_codepoint + 1;\r\n      last_codepoint = i + 1;\r\n    }\r\n\r\n    i++;\r\n  }\r\n\r\n  if (last_codepoint < maxlen)\r\n    arr.length = last_codepoint;\r\n  else\r\n    arr.length = last2;\r\n\r\n  return arr;\r\n}\r\n\r\nvar _static_sbuf_ss = new Array(2048);\r\nvar pack_static_string = exports.pack_static_string = function pack_static_string(data, str, length) {\r\n  if (length == undefined)\r\n    throw new Error(\"'length' paremter is not optional for pack_static_string()\");\r\n\r\n  var arr = length < 2048 ? _static_sbuf_ss : new Array();\r\n  arr.length = 0;\r\n\r\n  encode_utf8(arr, str);\r\n  truncate_utf8(arr, length);\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    if (i >= arr.length) {\r\n      data.push(0);\r\n    } else {\r\n      data.push(arr[i]);\r\n    }\r\n  }\r\n}\r\n\r\nvar _static_sbuf = new Array(32);\r\n\r\n/*strings are packed as 32-bit unicode codepoints*/\r\nvar pack_string = exports.pack_string = function pack_string(data, str) {\r\n  _static_sbuf.length = 0;\r\n  encode_utf8(_static_sbuf, str);\r\n\r\n  pack_int(data, _static_sbuf.length);\r\n\r\n  for (var i = 0; i < _static_sbuf.length; i++) {\r\n    data.push(_static_sbuf[i]);\r\n  }\r\n}\r\n\r\nvar unpack_bytes = exports.unpack_bytes = function unpack_bytes(dview, uctx, len) {\r\n  var ret = new DataView(dview.buffer.slice(uctx.i, uctx.i + len));\r\n  uctx.i += len;\r\n\r\n  return ret;\r\n}\r\n\r\nvar unpack_byte = exports.unpack_byte = function (dview, uctx) {\r\n  return dview.getUint8(uctx.i++);\r\n}\r\n\r\nvar unpack_int = exports.unpack_int = function (dview, uctx) {\r\n  uctx.i += 4;\r\n  return dview.getInt32(uctx.i - 4, exports.STRUCT_ENDIAN);\r\n}\r\n\r\nexports.unpack_float = function (dview, uctx) {\r\n  uctx.i += 4;\r\n  return dview.getFloat32(uctx.i - 4, exports.STRUCT_ENDIAN);\r\n}\r\n\r\nexports.unpack_double = function (dview, uctx) {\r\n  uctx.i += 8;\r\n  return dview.getFloat64(uctx.i - 8, exports.STRUCT_ENDIAN);\r\n}\r\n\r\nexports.unpack_short = function (dview, uctx) {\r\n  uctx.i += 2;\r\n  return dview.getInt16(uctx.i - 2, exports.STRUCT_ENDIAN);\r\n}\r\n\r\nvar _static_arr_us = new Array(32);\r\nexports.unpack_string = function (data, uctx) {\r\n  var str = \"\"\r\n\r\n  var slen = unpack_int(data, uctx);\r\n  var arr = slen < 2048 ? _static_arr_us : new Array(slen);\r\n\r\n  arr.length = slen;\r\n  for (var i = 0; i < slen; i++) {\r\n    arr[i] = unpack_byte(data, uctx);\r\n  }\r\n\r\n  return decode_utf8(arr);\r\n}\r\n\r\nvar _static_arr_uss = new Array(2048);\r\nexports.unpack_static_string = function unpack_static_string(data, uctx, length) {\r\n  var str = \"\";\r\n\r\n  if (length == undefined)\r\n    throw new Error(\"'length' cannot be undefined in unpack_static_string()\");\r\n\r\n  var arr = length < 2048 ? _static_arr_uss : new Array(length);\r\n  arr.length = 0;\r\n\r\n  var done = false;\r\n  for (var i = 0; i < length; i++) {\r\n    var c = unpack_byte(data, uctx);\r\n\r\n    if (c == 0) {\r\n      done = true;\r\n    }\r\n\r\n    if (!done && c != 0) {\r\n      arr.push(c);\r\n      //arr.length++;\r\n    }\r\n  }\r\n\r\n  truncate_utf8(arr, length);\r\n  return decode_utf8(arr);\r\n}\r\n",
    "description": null,
    "longname": "C:/dev/nstructjs/src/struct_binpack.js",
    "kind": "file",
    "name": "src/struct_binpack.js",
    "__myFormatTag": 347
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "struct_util",
    "memberof": "src/struct_binpack.js",
    "static": true,
    "longname": "src/struct_binpack.js~struct_util",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "__myFormatTag": 66,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "struct_typesystem",
    "memberof": "src/struct_binpack.js",
    "static": true,
    "longname": "src/struct_binpack.js~struct_typesystem",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "__myFormatTag": 67,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "name": "Class",
    "memberof": "src/struct_binpack.js",
    "static": true,
    "longname": "src/struct_binpack.js~Class",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "__myFormatTag": 68,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "temp_dataview",
    "memberof": "src/struct_binpack.js",
    "static": true,
    "longname": "src/struct_binpack.js~temp_dataview",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "__myFormatTag": 69,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "name": "uint8_view",
    "memberof": "src/struct_binpack.js",
    "static": true,
    "longname": "src/struct_binpack.js~uint8_view",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "__myFormatTag": 70,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "unpack_context",
    "memberof": "src/struct_binpack.js",
    "static": true,
    "longname": "src/struct_binpack.js~unpack_context",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "__myFormatTag": 71,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "pack_byte",
    "longname": "src/struct_binpack.js~pack_byte",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "array",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 350
      },
      {
        "description": "",
        "name": "val",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 352
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{pack_byte}",
    "export": "true",
    "__myFormatTag": 348,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 71,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "pack_bytes",
    "longname": "src/struct_binpack.js~pack_bytes",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "array",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 356
      },
      {
        "description": "",
        "name": "bytes",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 358
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{pack_bytes}",
    "export": "true",
    "__myFormatTag": 354,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 72,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "pack_int",
    "longname": "src/struct_binpack.js~pack_int",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "array",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 362
      },
      {
        "description": "",
        "name": "val",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 364
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{pack_int}",
    "export": "true",
    "__myFormatTag": 360,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 73,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "pack_float",
    "longname": "src/struct_binpack.js~pack_float",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "array",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 368
      },
      {
        "description": "",
        "name": "val",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 370
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{pack_float}",
    "export": "true",
    "__myFormatTag": 366,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 74,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "pack_double",
    "longname": "src/struct_binpack.js~pack_double",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "array",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 374
      },
      {
        "description": "",
        "name": "val",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 376
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{pack_double}",
    "export": "true",
    "__myFormatTag": 372,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 75,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "pack_short",
    "longname": "src/struct_binpack.js~pack_short",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "array",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 380
      },
      {
        "description": "",
        "name": "val",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 382
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{pack_short}",
    "export": "true",
    "__myFormatTag": 378,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 76,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "encode_utf8",
    "longname": "src/struct_binpack.js~encode_utf8",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "arr",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 386
      },
      {
        "description": "",
        "name": "str",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 388
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{encode_utf8}",
    "export": "true",
    "__myFormatTag": 384,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 77,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "decode_utf8",
    "longname": "src/struct_binpack.js~decode_utf8",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "arr",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 392
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{decode_utf8}",
    "export": "true",
    "__myFormatTag": 390,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "test_utf8",
    "longname": "src/struct_binpack.js~test_utf8",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{test_utf8}",
    "export": "true",
    "__myFormatTag": 394,
    "access": "public",
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "truncate_utf8",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_binpack.js~truncate_utf8",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "__myFormatTag": 81,
    "params": [
      {
        "name": "arr",
        "types": [
          "*"
        ]
      },
      {
        "name": "maxlen",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "_static_sbuf_ss",
    "memberof": "src/struct_binpack.js",
    "static": true,
    "longname": "src/struct_binpack.js~_static_sbuf_ss",
    "access": "private",
    "export": false,
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "__myFormatTag": 82,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "pack_static_string",
    "longname": "src/struct_binpack.js~pack_static_string",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "data",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 398
      },
      {
        "description": "",
        "name": "str",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 400
      },
      {
        "description": "",
        "name": "length",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 402
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{pack_static_string}",
    "export": "true",
    "__myFormatTag": 396,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "_static_sbuf",
    "memberof": "src/struct_binpack.js",
    "static": true,
    "longname": "src/struct_binpack.js~_static_sbuf",
    "access": "private",
    "export": false,
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "__myFormatTag": 84,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "<pre>strings are packed as 32-bit unicode codepoints</pre>",
    "kind": "function",
    "name": "pack_string",
    "longname": "src/struct_binpack.js~pack_string",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "data",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 406
      },
      {
        "description": "",
        "name": "str",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 408
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{pack_string}",
    "export": "true",
    "__myFormatTag": 404,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 84,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "unpack_bytes",
    "longname": "src/struct_binpack.js~unpack_bytes",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "dview",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 412
      },
      {
        "description": "",
        "name": "uctx",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 414
      },
      {
        "description": "",
        "name": "len",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 416
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{unpack_bytes}",
    "export": "true",
    "__myFormatTag": 410,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "unpack_byte",
    "longname": "src/struct_binpack.js~unpack_byte",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "dview",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 420
      },
      {
        "description": "",
        "name": "uctx",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 422
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{unpack_byte}",
    "export": "true",
    "__myFormatTag": 418,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "unpack_int",
    "longname": "src/struct_binpack.js~unpack_int",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "dview",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 426
      },
      {
        "description": "",
        "name": "uctx",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 428
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{unpack_int}",
    "export": "true",
    "__myFormatTag": 424,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "unpack_float",
    "longname": "src/struct_binpack.js~unpack_float",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "dview",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 432
      },
      {
        "description": "",
        "name": "uctx",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 434
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{unpack_float}",
    "export": "true",
    "__myFormatTag": 430,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "unpack_double",
    "longname": "src/struct_binpack.js~unpack_double",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "dview",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 438
      },
      {
        "description": "",
        "name": "uctx",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 440
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{unpack_double}",
    "export": "true",
    "__myFormatTag": 436,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "unpack_short",
    "longname": "src/struct_binpack.js~unpack_short",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "dview",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 444
      },
      {
        "description": "",
        "name": "uctx",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 446
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{unpack_short}",
    "export": "true",
    "__myFormatTag": 442,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "_static_arr_us",
    "memberof": "src/struct_binpack.js",
    "static": true,
    "longname": "src/struct_binpack.js~_static_arr_us",
    "access": "private",
    "export": false,
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 216,
    "undocument": true,
    "__myFormatTag": 92,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "unpack_string",
    "longname": "src/struct_binpack.js~unpack_string",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "data",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 450
      },
      {
        "description": "",
        "name": "uctx",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 452
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{unpack_string}",
    "export": "true",
    "__myFormatTag": 448,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "_static_arr_uss",
    "memberof": "src/struct_binpack.js",
    "static": true,
    "longname": "src/struct_binpack.js~_static_arr_uss",
    "access": "private",
    "export": false,
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 231,
    "undocument": true,
    "__myFormatTag": 94,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "unpack_static_string",
    "longname": "src/struct_binpack.js~unpack_static_string",
    "memberof": "src/struct_binpack.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "data",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 456
      },
      {
        "description": "",
        "name": "uctx",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 458
      },
      {
        "description": "",
        "name": "length",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 460
      }
    ],
    "importPath": "nstructjs/src/struct_binpack.js",
    "importStyle": "{unpack_static_string}",
    "export": "true",
    "__myFormatTag": 454,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "static": true,
    "access": "public",
    "content": "\"use strict\";\r\n\r\nif (typeof btoa == \"undefined\") {\r\n  _nGlobal.btoa = function btoa(str) {\r\n    var buffer = new Buffer(\"\" + str, 'binary');\r\n    return buffer.toString('base64');\r\n  }\r\n\r\n  _nGlobal.atob = function atob(str) {\r\n    return new Buffer(str, 'base64').toString('binary');\r\n  }\r\n}\r\n\r\nlet struct_intern = require(\"./struct_intern.js\");\r\nlet struct_util = require(\"./struct_util.js\");\r\nlet struct_binpack = require(\"./struct_binpack.js\");\r\nlet struct_parseutil = require(\"./struct_parseutil.js\");\r\nlet struct_typesystem = require(\"./struct_typesystem.js\");\r\nlet struct_parser = require(\"./struct_parser.js\");\r\n\r\nvar Class = struct_typesystem.Class;\r\n\r\n/*\r\nfile format:\r\n  magic signature              : 4 bytes\r\n  file version major           : 2 bytes\r\n  file version minor           : 1 bytes\r\n  file version micro           : 1 bytes\r\n  length of struct scripts     : 4 bytes\r\n  struct scripts for this file : ...\r\n  \r\n  block:\r\n    magic signature for block              : 4 bytes\r\n    length of data  (not including header) : 4 bytes\r\n    id of struct type                      : 4 bytes\r\n    \r\n    data                                   : ...\r\n*/\r\n\r\nvar FileParams = exports.FileParams = class FileParams {\r\n  constructor() {\r\n    this.magic = \"STRT\";\r\n    this.ext = \".bin\";\r\n    this.blocktypes = [\"DATA\"];\r\n\r\n    this.version = {\r\n      major: 0,\r\n      minor: 0,\r\n      micro: 1\r\n    };\r\n  }\r\n}\r\n\r\n//used to define blocks\r\nvar Block = exports.Block = class Block {\r\n  constructor(type_magic, data) {\r\n    this.type = type_magic;\r\n    this.data = data;\r\n  }\r\n};\r\n\r\nvar FileError = exports.FileError = class FileeError extends Error {\r\n};\r\n\r\nvar FileHelper = exports.FileHelper = class FileHelper {\r\n  //params can be FileParams instance, or object literal\r\n  //(it will convert to FileParams)\r\n  constructor(params) {\r\n    if (params === undefined) {\r\n      params = new FileParams();\r\n    } else {\r\n      var fp = new FileParams();\r\n\r\n      for (var k in params) {\r\n        fp[k] = params[k];\r\n      }\r\n      params = fp;\r\n    }\r\n\r\n    this.version = params.version;\r\n    this.blocktypes = params.blocktypes;\r\n    this.magic = params.magic;\r\n    this.ext = params.ext;\r\n    this.struct = undefined;\r\n    this.unpack_ctx = undefined;\r\n  }\r\n\r\n  read(dataview) {\r\n    this.unpack_ctx = new struct_binpack.unpack_context();\r\n\r\n    var magic = struct_binpack.unpack_static_string(dataview, this.unpack_ctx, 4);\r\n\r\n    if (magic !== this.magic) {\r\n      throw new FileError(\"corrupted file\");\r\n    }\r\n\r\n    this.version = {};\r\n    this.version.major = struct_binpack.unpack_short(dataview, this.unpack_ctx);\r\n    this.version.minor = struct_binpack.unpack_byte(dataview, this.unpack_ctx);\r\n    this.version.micro = struct_binpack.unpack_byte(dataview, this.unpack_ctx);\r\n\r\n    var struct = this.struct = new structjs.STRUCT();\r\n\r\n    var scripts = struct_binpack.unpack_string(dataview, this.unpack_ctx);\r\n    this.struct.parse_structs(scripts, structjs.manager);\r\n\r\n    var blocks = [];\r\n    var dviewlen = dataview.buffer.byteLength;\r\n\r\n    while (this.unpack_ctx.i < dviewlen) {\r\n      //console.log(\"reading block. . .\", this.unpack_ctx.i, dviewlen);\r\n\r\n      var type = struct_binpack.unpack_static_string(dataview, this.unpack_ctx, 4);\r\n      var datalen = struct_binpack.unpack_int(dataview, this.unpack_ctx);\r\n      var bstruct = struct_binpack.unpack_int(dataview, this.unpack_ctx);\r\n      var bdata;\r\n\r\n      //console.log(type, datalen, bstruct);\r\n\r\n      if (bstruct == -2) { //string data, e.g. JSON\r\n        bdata = struct_binpack.unpack_static_string(dataview, this.unpack_ctx, datalen);\r\n      } else {\r\n        bdata = struct_binpack.unpack_bytes(dataview, this.unpack_ctx, datalen);\r\n        bdata = struct.read_object(bdata, bstruct, new struct_binpack.unpack_context());\r\n      }\r\n\r\n      var block = new Block();\r\n      block.type = type;\r\n      block.data = bdata;\r\n\r\n      blocks.push(block);\r\n    }\r\n\r\n    this.blocks = blocks;\r\n    return blocks;\r\n  }\r\n\r\n  write(blocks) {\r\n    this.struct = structjs.manager;\r\n    this.blocks = blocks;\r\n\r\n    var data = [];\r\n\r\n    struct_binpack.pack_static_string(data, this.magic, 4);\r\n    struct_binpack.pack_short(data, this.version.major);\r\n    struct_binpack.pack_byte(data, this.version.minor & 255);\r\n    struct_binpack.pack_byte(data, this.version.micro & 255);\r\n\r\n    var scripts = structjs.write_scripts();\r\n    struct_binpack.pack_string(data, scripts);\r\n\r\n    var struct = this.struct;\r\n\r\n    for (var block of blocks) {\r\n      if (typeof block.data == \"string\") { //string data, e.g. JSON\r\n        struct_binpack.pack_static_string(data, block.type, 4);\r\n        struct_binpack.pack_int(data, block.data.length);\r\n        struct_binpack.pack_int(data, -2); //flag as string data\r\n        struct_binpack.pack_static_string(data, block.data, block.data.length);\r\n        continue;\r\n      }\r\n\r\n      var structName = block.data.constructor.structName;\r\n      if (structName === undefined || !(structName in struct.structs)) {\r\n        throw new Error(\"Non-STRUCTable object \" + block.data);\r\n      }\r\n\r\n      var data2 = [];\r\n      var stt = struct.structs[structName];\r\n\r\n      struct.write_object(data2, block.data);\r\n\r\n      struct_binpack.pack_static_string(data, block.type, 4);\r\n      struct_binpack.pack_int(data, data2.length);\r\n      struct_binpack.pack_int(data, stt.id);\r\n\r\n      struct_binpack.pack_bytes(data, data2);\r\n    }\r\n\r\n    return new DataView(new Uint8Array(data).buffer);\r\n  }\r\n\r\n  writeBase64(blocks) {\r\n    var dataview = this.write(blocks);\r\n\r\n    var str = \"\";\r\n    var bytes = new Uint8Array(dataview.buffer);\r\n\r\n    for (var i = 0; i < bytes.length; i++) {\r\n      str += String.fromCharCode(bytes[i]);\r\n    }\r\n\r\n    return btoa(str);\r\n  }\r\n\r\n  makeBlock(type, data) {\r\n    return new Block(type, data);\r\n  }\r\n\r\n  readBase64(base64) {\r\n    var data = atob(base64);\r\n    var data2 = new Uint8Array(data.length);\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n      data2[i] = data.charCodeAt(i);\r\n    }\r\n\r\n    return this.read(new DataView(data2.buffer));\r\n  }\r\n};\r\n/*\r\n  //get type data from structjs.manager\r\n  var classes = {};\r\n  structjs.manager.forEach(function(stt) {\r\n    classes[stt] \r\n  }, this);\r\n*/\r\n",
    "description": null,
    "longname": "C:/dev/nstructjs/src/struct_filehelper.js",
    "kind": "file",
    "name": "src/struct_filehelper.js",
    "__myFormatTag": 582
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "struct_intern",
    "memberof": "src/struct_filehelper.js",
    "static": true,
    "longname": "src/struct_filehelper.js~struct_intern",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_filehelper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "__myFormatTag": 97,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "struct_util",
    "memberof": "src/struct_filehelper.js",
    "static": true,
    "longname": "src/struct_filehelper.js~struct_util",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_filehelper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "__myFormatTag": 98,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "struct_binpack",
    "memberof": "src/struct_filehelper.js",
    "static": true,
    "longname": "src/struct_filehelper.js~struct_binpack",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_filehelper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "__myFormatTag": 99,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "struct_parseutil",
    "memberof": "src/struct_filehelper.js",
    "static": true,
    "longname": "src/struct_filehelper.js~struct_parseutil",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_filehelper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "__myFormatTag": 100,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "struct_typesystem",
    "memberof": "src/struct_filehelper.js",
    "static": true,
    "longname": "src/struct_filehelper.js~struct_typesystem",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_filehelper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "__myFormatTag": 101,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "struct_parser",
    "memberof": "src/struct_filehelper.js",
    "static": true,
    "longname": "src/struct_filehelper.js~struct_parser",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_filehelper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "__myFormatTag": 102,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "Class",
    "memberof": "src/struct_filehelper.js",
    "static": true,
    "longname": "src/struct_filehelper.js~Class",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_filehelper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "__myFormatTag": 103,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "static": true,
    "description": "<pre>\r\nfile format:\r\n  magic signature              : 4 bytes\r\n  file version major           : 2 bytes\r\n  file version minor           : 1 bytes\r\n  file version micro           : 1 bytes\r\n  length of struct scripts     : 4 bytes\r\n  struct scripts for this file : ...\r\n  \r\n  block:\r\n    magic signature for block              : 4 bytes\r\n    length of data  (not including header) : 4 bytes\r\n    id of struct type                      : 4 bytes\r\n    \r\n    data                                   : ...\r\n</pre>",
    "interface": false,
    "kind": "class",
    "lineNumber": 40,
    "longname": "src/struct_filehelper.js~FileParams",
    "memberof": "src/struct_filehelper.js",
    "name": "FileParams",
    "export": true,
    "importPath": "nstructjs/src/struct_filehelper.js",
    "importStyle": "{FileParams}",
    "__myFormatTag": 583,
    "access": "public"
  },
  {
    "__docId__": 103,
    "static": true,
    "description": "<pre>used to define blocks</pre>",
    "interface": false,
    "kind": "class",
    "lineNumber": 55,
    "longname": "src/struct_filehelper.js~Block",
    "memberof": "src/struct_filehelper.js",
    "name": "Block",
    "export": true,
    "importPath": "nstructjs/src/struct_filehelper.js",
    "importStyle": "{Block}",
    "__myFormatTag": 584,
    "access": "public"
  },
  {
    "__docId__": 104,
    "static": true,
    "description": "",
    "interface": false,
    "kind": "class",
    "lineNumber": 62,
    "longname": "src/struct_filehelper.js~FileError",
    "memberof": "src/struct_filehelper.js",
    "name": "FileError",
    "export": true,
    "importPath": "nstructjs/src/struct_filehelper.js",
    "importStyle": "{FileError}",
    "__myFormatTag": 585,
    "access": "public"
  },
  {
    "__docId__": 105,
    "static": true,
    "description": "",
    "interface": false,
    "kind": "class",
    "lineNumber": 65,
    "longname": "src/struct_filehelper.js~FileHelper",
    "memberof": "src/struct_filehelper.js",
    "name": "FileHelper",
    "export": true,
    "importPath": "nstructjs/src/struct_filehelper.js",
    "importStyle": "{FileHelper}",
    "__myFormatTag": 586,
    "access": "public"
  },
  {
    "__docId__": 106,
    "static": true,
    "access": "public",
    "content": "\"use strict\";\r\nlet struct_util = require(\"./struct_util\");\r\nlet struct_binpack = require(\"./struct_binpack\");\r\nlet struct_parseutil = require(\"./struct_parseutil\");\r\nlet struct_typesystem = require(\"./struct_typesystem\");\r\nlet struct_parser = require(\"./struct_parser\");\r\n\r\n/*\r\n\r\nclass SomeClass {\r\n  static newSTRUCT() {\r\n    //returns a new, empty instance of SomeClass\r\n  }\r\n  \r\n  loadSTRUCT(reader) {\r\n    reader(this); //reads data into this instance\r\n  }\r\n  \r\n  //the old api, that both creates and reads\r\n  static fromSTRUCT(reader) {\r\n    let ret = new SomeClass();\r\n    reader(ret);\r\n    return ret;\r\n  }\r\n}\r\nSomeClass.STRUCT = `\r\nSomeClass {\r\n}\r\n`\r\nnstructjs.manager.add_class(SomeClass);\r\n\r\n*/\r\nvar StructTypeMap = struct_parser.StructTypeMap;\r\nvar StructTypes = struct_parser.StructTypes;\r\nvar Class = struct_typesystem.Class;\r\n\r\nvar struct_parse = struct_parser.struct_parse;\r\nvar StructEnum = struct_parser.StructEnum;\r\n\r\nvar _static_envcode_null = \"\";\r\nvar debug_struct = 0;\r\nvar packdebug_tablevel = 0;\r\n\r\nfunction gen_tabstr(tot) {\r\n  var ret = \"\";\r\n\r\n  for (var i = 0; i < tot; i++) {\r\n    ret += \" \";\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nlet packer_debug, packer_debug_start, packer_debug_end;\r\n\r\nif (debug_struct) {\r\n  packer_debug = function (msg) {\r\n    if (msg !== undefined) {\r\n      var t = gen_tabstr(packdebug_tablevel);\r\n      console.log(t + msg);\r\n    } else {\r\n      console.log(\"Warning: undefined msg\");\r\n    }\r\n  };\r\n  packer_debug_start = function (funcname) {\r\n    packer_debug(\"Start \" + funcname);\r\n    packdebug_tablevel++;\r\n  };\r\n\r\n  packer_debug_end = function (funcname) {\r\n    packdebug_tablevel--;\r\n    packer_debug(\"Leave \" + funcname);\r\n  };\r\n}\r\nelse {\r\n  packer_debug = function () {\r\n  };\r\n  packer_debug_start = function () {\r\n  };\r\n  packer_debug_end = function () {\r\n  };\r\n}\r\n\r\nexports.setDebugMode = (t) => {\r\n  debug_struct = t;\r\n\r\n  if (debug_struct) {\r\n    packer_debug = function (msg) {\r\n      if (msg != undefined) {\r\n        var t = gen_tabstr(packdebug_tablevel);\r\n        console.log(t + msg);\r\n      } else {\r\n        console.log(\"Warning: undefined msg\");\r\n      }\r\n    };\r\n    packer_debug_start = function (funcname) {\r\n      packer_debug(\"Start \" + funcname);\r\n      packdebug_tablevel++;\r\n    };\r\n\r\n    packer_debug_end = function (funcname) {\r\n      packdebug_tablevel--;\r\n      packer_debug(\"Leave \" + funcname);\r\n    };\r\n  }\r\n  else {\r\n    packer_debug = function () {\r\n    };\r\n    packer_debug_start = function () {\r\n    };\r\n    packer_debug_end = function () {\r\n    };\r\n  }\r\n}\r\n\r\nvar _ws_env = [[undefined, undefined]];\r\nvar pack_callbacks = [\r\n  function pack_int(data, val) {\r\n    packer_debug(\"int \" + val);\r\n\r\n    struct_binpack.pack_int(data, val);\r\n  }, function pack_float(data, val) {\r\n    packer_debug(\"float \" + val);\r\n\r\n    struct_binpack.pack_float(data, val);\r\n  }, function pack_double(data, val) {\r\n    packer_debug(\"double \" + val);\r\n\r\n    struct_binpack.pack_double(data, val);\r\n  }, 0, 0, 0, 0,\r\n  function pack_string(data, val) {\r\n    if (val == undefined)\r\n      val = \"\";\r\n    packer_debug(\"string: \" + val);\r\n    packer_debug(\"int \" + val.length);\r\n\r\n    struct_binpack.pack_string(data, val);\r\n  }, function pack_static_string(data, val, obj, thestruct, field, type) {\r\n    if (val == undefined)\r\n      val = \"\";\r\n    packer_debug(\"static_string: '\" + val + \"' length=\" + type.data.maxlength);\r\n\r\n    struct_binpack.pack_static_string(data, val, type.data.maxlength);\r\n  }, function pack_struct(data, val, obj, thestruct, field, type) {\r\n    packer_debug_start(\"struct \" + type.data);\r\n\r\n    thestruct.write_struct(data, val, thestruct.get_struct(type.data));\r\n\r\n    packer_debug_end(\"struct\");\r\n  }, function pack_tstruct(data, val, obj, thestruct, field, type) {\r\n    var cls = thestruct.get_struct_cls(type.data);\r\n    var stt = thestruct.get_struct(type.data);\r\n\r\n    //make sure inheritance is correct\r\n    if (val.constructor.structName != type.data && (val instanceof cls)) {\r\n      //if (DEBUG.Struct) {\r\n      //    console.log(val.constructor.structName+\" inherits from \"+cls.structName);\r\n      //}\r\n      stt = thestruct.get_struct(val.constructor.structName);\r\n    } else if (val.constructor.structName == type.data) {\r\n      stt = thestruct.get_struct(type.data);\r\n    } else {\r\n      console.trace();\r\n      throw new Error(\"Bad struct \" + val.constructor.structName + \" passed to write_struct\");\r\n    }\r\n\r\n    if (stt.id == 0) {\r\n    }\r\n\r\n    packer_debug_start(\"tstruct '\" + stt.name + \"'\");\r\n    packer_debug(\"int \" + stt.id);\r\n\r\n    struct_binpack.pack_int(data, stt.id);\r\n    thestruct.write_struct(data, val, stt);\r\n\r\n    packer_debug_end(\"tstruct\");\r\n  }, function pack_array(data, val, obj, thestruct, field, type) {\r\n    packer_debug_start(\"array\");\r\n\r\n    if (val == undefined) {\r\n      console.trace();\r\n      console.log(\"Undefined array fed to struct struct packer!\");\r\n      console.log(\"Field: \", field);\r\n      console.log(\"Type: \", type);\r\n      console.log(\"\");\r\n      packer_debug(\"int 0\");\r\n      struct_binpack.pack_int(data, 0);\r\n      return;\r\n    }\r\n\r\n    packer_debug(\"int \" + val.length);\r\n    struct_binpack.pack_int(data, val.length);\r\n\r\n    var d = type.data;\r\n\r\n    var itername = d.iname;\r\n    var type2 = d.type;\r\n\r\n    var env = _ws_env;\r\n    for (var i = 0; i < val.length; i++) {\r\n      var val2 = val[i];\r\n      if (itername != \"\" && itername != undefined && field.get) {\r\n        env[0][0] = itername;\r\n        env[0][1] = val2;\r\n        val2 = thestruct._env_call(field.get, obj, env);\r\n      }\r\n      var f2 = {type: type2, get: undefined, set: undefined};\r\n      do_pack(data, val2, obj, thestruct, f2, type2);\r\n    }\r\n    packer_debug_end(\"array\");\r\n  }, function pack_iter(data, val, obj, thestruct, field, type) {\r\n    //this was originally implemented to use ES6 iterators.\r\n\r\n    packer_debug_start(\"iter\");\r\n\r\n    if (val == undefined || val.forEach == undefined) {\r\n      console.trace();\r\n      console.log(\"Undefined iterable list fed to struct struct packer!\", val);\r\n      console.log(\"Field: \", field);\r\n      console.log(\"Type: \", type);\r\n      console.log(\"\");\r\n      packer_debug(\"int 0\");\r\n      struct_binpack.pack_int(data, 0);\r\n      return;\r\n    }\r\n\r\n    var len = 0.0;\r\n    val.forEach(function (val2) {\r\n      len++;\r\n    }, this);\r\n\r\n    packer_debug(\"int \" + len);\r\n    struct_binpack.pack_int(data, len);\r\n\r\n    var d = type.data, itername = d.iname, type2 = d.type;\r\n    var env = _ws_env;\r\n\r\n    var i = 0;\r\n    val.forEach(function (val2) {\r\n      if (i >= len) {\r\n        console.trace(\"Warning: iterator returned different length of list!\", val, i);\r\n        return;\r\n      }\r\n\r\n      if (itername != \"\" && itername != undefined && field.get) {\r\n        env[0][0] = itername;\r\n        env[0][1] = val2;\r\n        val2 = thestruct._env_call(field.get, obj, env);\r\n      }\r\n\r\n      var f2 = {type: type2, get: undefined, set: undefined};\r\n      do_pack(data, val2, obj, thestruct, f2, type2);\r\n\r\n      i++;\r\n    }, this);\r\n\r\n    packer_debug_end(\"iter\");\r\n  }, function pack_short(data, val) {\r\n    packer_debug(\"short \" + val);\r\n\r\n    struct_binpack.pack_short(data, Math.floor(val));\r\n  }, function pack_byte(data, val) {\r\n    packer_debug(\"byte \" + val);\r\n\r\n    struct_binpack.pack_byte(data, Math.floor(val));\r\n  }, function pack_bool(data, val) {\r\n    packer_debug(\"bool \" + val);\r\n\r\n    struct_binpack.pack_byte(data, !!val);\r\n  }];\r\n\r\nfunction do_pack(data, val, obj, thestruct, field, type) {\r\n  pack_callbacks[field.type.type](data, val, obj, thestruct, field, type);\r\n\r\n}\r\n\r\nfunction define_empty_class(name) {\r\n  var cls = function () {\r\n  };\r\n\r\n  cls.prototype = Object.create(Object.prototype);\r\n  cls.constructor = cls.prototype.constructor = cls;\r\n\r\n  cls.STRUCT = name + \" {\\n  }\\n\";\r\n  cls.structName = name;\r\n\r\n  cls.prototype.loadSTRUCT = function (reader) {\r\n    reader(this);\r\n  }\r\n\r\n  cls.newSTRUCT = function () {\r\n    return new this();\r\n  }\r\n\r\n  return cls;\r\n}\r\n\r\nvar STRUCT = exports.STRUCT = class STRUCT {\r\n  constructor() {\r\n    this.idgen = new struct_util.IDGen();\r\n\r\n    this.structs = {}\r\n    this.struct_cls = {}\r\n    this.struct_ids = {}\r\n\r\n    this.compiled_code = {}\r\n    this.null_natives = {}\r\n\r\n    function define_null_native(name, cls) {\r\n      var obj = define_empty_class(name);\r\n\r\n      var stt = struct_parse.parse(obj.STRUCT);\r\n\r\n      stt.id = this.idgen.gen_id();\r\n\r\n      this.structs[name] = stt;\r\n      this.struct_cls[name] = cls;\r\n      this.struct_ids[stt.id] = stt;\r\n\r\n      this.null_natives[name] = 1;\r\n    }\r\n\r\n    define_null_native.call(this, \"Object\", Object);\r\n  }\r\n\r\n  forEach(func, thisvar) {\r\n    for (var k in this.structs) {\r\n      var stt = this.structs[k];\r\n\r\n      if (thisvar != undefined)\r\n        func.call(thisvar, stt);\r\n      else\r\n        func(stt);\r\n    }\r\n  }\r\n\r\n  //defined_classes is an array of class constructors\r\n  //with STRUCT scripts, *OR* another STRUCT instance\r\n  //\r\n  //defaults to structjs.manager\r\n  parse_structs(buf, defined_classes) {\r\n    if (defined_classes === undefined) {\r\n      defined_classes = exports.manager;\r\n    }\r\n\r\n    if (defined_classes instanceof STRUCT) {\r\n      var struct2 = defined_classes;\r\n      defined_classes = [];\r\n\r\n      for (var k in struct2.struct_cls) {\r\n        defined_classes.push(struct2.struct_cls[k]);\r\n      }\r\n    }\r\n\r\n    if (defined_classes == undefined) {\r\n      defined_classes = [];\r\n      for (var k in exports.manager.struct_cls) {\r\n        defined_classes.push(exports.manager.struct_cls[k]);\r\n      }\r\n    }\r\n\r\n    var clsmap = {}\r\n\r\n    for (var i = 0; i < defined_classes.length; i++) {\r\n      var cls = defined_classes[i];\r\n\r\n      if (cls.structName == undefined && cls.STRUCT != undefined) {\r\n        var stt = struct_parse.parse(cls.STRUCT.trim());\r\n        cls.structName = stt.name;\r\n      } else if (cls.structName == undefined && cls.name != \"Object\") {\r\n        console.log(\"Warning, bad class in registered class list\", cls.name, cls);\r\n        continue;\r\n      }\r\n\r\n      clsmap[cls.structName] = defined_classes[i];\r\n    }\r\n\r\n    struct_parse.input(buf);\r\n\r\n    while (!struct_parse.at_end()) {\r\n      var stt = struct_parse.parse(undefined, false);\r\n\r\n      if (!(stt.name in clsmap)) {\r\n        if (!(stt.name in this.null_natives))\r\n          console.log(\"WARNING: struct \" + stt.name + \" is missing from class list.\");\r\n\r\n        var dummy = define_empty_class(stt.name);\r\n\r\n        dummy.STRUCT = STRUCT.fmt_struct(stt);\r\n        dummy.structName = stt.name;\r\n\r\n        dummy.prototype.structName = dummy.name;\r\n\r\n        this.struct_cls[dummy.structName] = dummy;\r\n        this.structs[dummy.structName] = stt;\r\n\r\n        if (stt.id != -1)\r\n          this.struct_ids[stt.id] = stt;\r\n      } else {\r\n        this.struct_cls[stt.name] = clsmap[stt.name];\r\n        this.structs[stt.name] = stt;\r\n\r\n        if (stt.id != -1)\r\n          this.struct_ids[stt.id] = stt;\r\n      }\r\n\r\n      var tok = struct_parse.peek();\r\n      while (tok != undefined && (tok.value == \"\\n\" || tok.value == \"\\r\" || tok.value == \"\\t\" || tok.value == \" \")) {\r\n        tok = struct_parse.peek();\r\n      }\r\n    }\r\n  }\r\n\r\n  register(cls, structName) {\r\n    return this.add_class(cls, structName);\r\n  }\r\n\r\n  add_class(cls, structName) {\r\n    if (!cls.STRUCT) {\r\n      throw new Error(\"class \" + cls.name + \" has no STRUCT script\");\r\n    }\r\n\r\n    var stt = struct_parse.parse(cls.STRUCT);\r\n\r\n    cls.structName = stt.name;\r\n\r\n    //create default newSTRUCT\r\n    if (cls.newSTRUCT === undefined) {\r\n      cls.newSTRUCT = function () {\r\n        return new this();\r\n      }\r\n    }\r\n\r\n    if (structName !== undefined) {\r\n      stt.name = cls.structName = structName;\r\n    } else if (cls.structName === undefined) {\r\n      cls.structName = stt.name;\r\n    } else if (cls.structName !== undefined) {\r\n      stt.name = cls.structName;\r\n    } else {\r\n      throw new Error(\"Missing structName parameter\");\r\n    }\r\n\r\n    if (stt.id == -1)\r\n      stt.id = this.idgen.gen_id();\r\n\r\n    this.structs[cls.structName] = stt;\r\n    this.struct_cls[cls.structName] = cls;\r\n    this.struct_ids[stt.id] = stt;\r\n  }\r\n\r\n  get_struct_id(id) {\r\n    return this.struct_ids[id];\r\n  }\r\n\r\n  get_struct(name) {\r\n    if (!(name in this.structs)) {\r\n      console.trace();\r\n      throw new Error(\"Unknown struct \" + name);\r\n    }\r\n    return this.structs[name];\r\n  }\r\n\r\n  get_struct_cls(name) {\r\n    if (!(name in this.struct_cls)) {\r\n      console.trace();\r\n      throw new Error(\"Unknown struct \" + name);\r\n    }\r\n    return this.struct_cls[name];\r\n  }\r\n\r\n  static inherit(child, parent, structName = child.name) {\r\n    if (!parent.STRUCT) {\r\n      return structName + \"{\\n\";\r\n    }\r\n\r\n    var stt = struct_parse.parse(parent.STRUCT);\r\n    var code = structName + \"{\\n\";\r\n    code += STRUCT.fmt_struct(stt, true);\r\n    return code;\r\n  }\r\n\r\n  /** invoke loadSTRUCT methods on parent objects.  note that\r\n   reader() is only called once.  it is called however.*/\r\n  static Super(obj, reader) {\r\n    console.warn(\"deprecated\");\r\n\r\n    reader(obj);\r\n\r\n    function reader2(obj) {\r\n    }\r\n\r\n    let cls = obj.constructor;\r\n    let bad = cls === undefined || cls.prototype === undefined || cls.prototype.__proto__ === undefined;\r\n\r\n    if (bad) {\r\n      return;\r\n    }\r\n\r\n    let parent = cls.prototype.__proto__.constructor;\r\n    bad = bad || parent === undefined;\r\n\r\n    if (!bad && parent.prototype.loadSTRUCT && parent.prototype.loadSTRUCT !== obj.loadSTRUCT) { //parent.prototype.hasOwnProperty(\"loadSTRUCT\")) {\r\n      parent.prototype.loadSTRUCT.call(obj, reader2);\r\n    }\r\n  }\r\n\r\n  /** deprecated.  used with old fromSTRUCT interface. */\r\n  static chain_fromSTRUCT(cls, reader) {\r\n    console.warn(\"Using deprecated (and evil) chain_fromSTRUCT method, eek!\");\r\n\r\n    var proto = cls.prototype;\r\n    var parent = cls.prototype.prototype.constructor;\r\n\r\n    var obj = parent.fromSTRUCT(reader);\r\n    let obj2 = new cls();\r\n\r\n    let keys = Object.keys(obj).concat(Object.getOwnPropertySymbols(obj));\r\n    //var keys=Object.keys(proto);\r\n\r\n    for (var i = 0; i < keys.length; i++) {\r\n      let k = keys[i];\r\n\r\n      try {\r\n        obj2[k] = obj[k];\r\n      } catch (error) {\r\n        console.warn(\"  failed to set property\", k);\r\n      }\r\n      //var k=keys[i];\r\n      //if (k==\"__proto__\")\r\n      // continue;\r\n      //obj[k] = proto[k];\r\n    }\r\n\r\n    /*\r\n    if (proto.toString !== Object.prototype.toString)\r\n      obj2.toString = proto.toString;\r\n    //*/\r\n\r\n    return obj2;\r\n  }\r\n\r\n  static formatStruct(stt, internal_only, no_helper_js) {\r\n    return this.fmt_struct(stt, internal_only, no_helper_js);\r\n  }\r\n\r\n  static fmt_struct(stt, internal_only, no_helper_js) {\r\n    if (internal_only == undefined)\r\n      internal_only = false;\r\n    if (no_helper_js == undefined)\r\n      no_helper_js = false;\r\n\r\n    var s = \"\";\r\n    if (!internal_only) {\r\n      s += stt.name;\r\n      if (stt.id != -1)\r\n        s += \" id=\" + stt.id;\r\n      s += \" {\\n\";\r\n    }\r\n    var tab = \"  \";\r\n\r\n    function fmt_type(type) {\r\n      if (type.type == StructEnum.T_ARRAY || type.type == StructEnum.T_ITER) {\r\n        if (type.data.iname != \"\" && type.data.iname != undefined) {\r\n          return \"array(\" + type.data.iname + \", \" + fmt_type(type.data.type) + \")\";\r\n        }\r\n        else {\r\n          return \"array(\" + fmt_type(type.data.type) + \")\";\r\n        }\r\n      } else if (type.type == StructEnum.T_STATIC_STRING) {\r\n        return \"static_string[\" + type.data.maxlength + \"]\";\r\n      } else if (type.type == StructEnum.T_STRUCT) {\r\n        return type.data;\r\n      } else if (type.type == StructEnum.T_TSTRUCT) {\r\n        return \"abstract(\" + type.data + \")\";\r\n      } else {\r\n        return StructTypeMap[type.type];\r\n      }\r\n    }\r\n\r\n    var fields = stt.fields;\r\n    for (var i = 0; i < fields.length; i++) {\r\n      var f = fields[i];\r\n      s += tab + f.name + \" : \" + fmt_type(f.type);\r\n      if (!no_helper_js && f.get != undefined) {\r\n        s += \" | \" + f.get.trim();\r\n      }\r\n      s += \";\\n\";\r\n    }\r\n    if (!internal_only)\r\n      s += \"}\";\r\n    return s;\r\n  }\r\n\r\n  _env_call(code, obj, env) {\r\n    var envcode = _static_envcode_null;\r\n    if (env != undefined) {\r\n      envcode = \"\";\r\n      for (var i = 0; i < env.length; i++) {\r\n        envcode = \"var \" + env[i][0] + \" = env[\" + i.toString() + \"][1];\\n\" + envcode;\r\n      }\r\n    }\r\n    var fullcode = \"\";\r\n    if (envcode !== _static_envcode_null)\r\n      fullcode = envcode + code;\r\n    else\r\n      fullcode = code;\r\n    var func;\r\n\r\n    //fullcode = fullcode.replace(/\\bthis\\b/, \"obj\");\r\n\r\n    if (!(fullcode in this.compiled_code)) {\r\n      var code2 = \"func = function(obj, env) { \" + envcode + \"return \" + code + \"}\";\r\n      try {\r\n        eval(code2);\r\n      }\r\n      catch (err) {\r\n        struct_util.print_stack(err);\r\n\r\n        console.log(code2);\r\n        console.log(\" \");\r\n        throw err;\r\n      }\r\n      this.compiled_code[fullcode] = func;\r\n    }\r\n    else {\r\n      func = this.compiled_code[fullcode];\r\n    }\r\n    try {\r\n      return func.call(obj, env);\r\n    }\r\n    catch (err) {\r\n      struct_util.print_stack(err);\r\n\r\n      var code2 = \"func = function(obj, env) { \" + envcode + \"return \" + code + \"}\";\r\n      console.log(code2);\r\n      console.log(\" \");\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  write_struct(data, obj, stt) {\r\n    function use_helper_js(field) {\r\n      if (field.type.type == StructEnum.T_ARRAY || field.type.type == StructEnum.T_ITER) {\r\n        return field.type.data.iname == undefined || field.type.data.iname == \"\";\r\n      }\r\n      return true;\r\n    }\r\n\r\n    var fields = stt.fields;\r\n    var thestruct = this;\r\n    for (var i = 0; i < fields.length; i++) {\r\n      var f = fields[i];\r\n      var t1 = f.type;\r\n      var t2 = t1.type;\r\n\r\n      if (use_helper_js(f)) {\r\n        var val;\r\n        var type = t2;\r\n        if (f.get != undefined) {\r\n          val = thestruct._env_call(f.get, obj);\r\n        }\r\n        else {\r\n          val = obj[f.name];\r\n        }\r\n        do_pack(data, val, obj, thestruct, f, t1);\r\n      }\r\n      else {\r\n        var val = obj[f.name];\r\n        do_pack(data, val, obj, thestruct, f, t1);\r\n      }\r\n    }\r\n  }\r\n\r\n  write_object(data, obj) {\r\n    var cls = obj.constructor.structName;\r\n    var stt = this.get_struct(cls);\r\n\r\n    if (data === undefined) {\r\n      data = [];\r\n    }\r\n\r\n    this.write_struct(data, obj, stt);\r\n    return data;\r\n  }\r\n\r\n  read_object(data, cls_or_struct_id, uctx) {\r\n    var cls, stt;\r\n\r\n    if (data instanceof Array) {\r\n      data = new DataView(new Uint8Array(data).buffer);\r\n    }\r\n\r\n    if (typeof cls_or_struct_id == \"number\") {\r\n      cls = this.struct_cls[this.struct_ids[cls_or_struct_id].name];\r\n    } else {\r\n      cls = cls_or_struct_id;\r\n    }\r\n\r\n    if (cls === undefined) {\r\n      throw new Error(\"bad cls_or_struct_id \" + cls_or_struct_id);\r\n    }\r\n\r\n    stt = this.structs[cls.structName];\r\n\r\n    if (uctx == undefined) {\r\n      uctx = new struct_binpack.unpack_context();\r\n\r\n      packer_debug(\"\\n\\n=Begin reading \" + cls.structName + \"=\");\r\n    }\r\n    var thestruct = this;\r\n\r\n    var unpack_funcs = [\r\n      function t_int(type) { //int\r\n        var ret = struct_binpack.unpack_int(data, uctx);\r\n\r\n        packer_debug(\"-int \" + (debug_struct > 1 ? ret : \"\"));\r\n\r\n        return ret;\r\n      }, function t_float(type) {\r\n        var ret = struct_binpack.unpack_float(data, uctx);\r\n\r\n        packer_debug(\"-float \" + (debug_struct > 1 ? ret : \"\"));\r\n\r\n        return ret;\r\n      }, function t_double(type) {\r\n        var ret = struct_binpack.unpack_double(data, uctx);\r\n\r\n        packer_debug(\"-double \" + (debug_struct > 1 ? ret : \"\"));\r\n\r\n        return ret;\r\n      }, 0, 0, 0, 0,\r\n      function t_string(type) {\r\n        packer_debug_start(\"string\");\r\n\r\n        var s = struct_binpack.unpack_string(data, uctx);\r\n\r\n        packer_debug(\"data: '\" + s + \"'\");\r\n        packer_debug_end(\"string\");\r\n        return s;\r\n      }, function t_static_string(type) {\r\n        packer_debug_start(\"static_string\");\r\n\r\n        var s = struct_binpack.unpack_static_string(data, uctx, type.data.maxlength);\r\n\r\n        packer_debug(\"data: '\" + s + \"'\");\r\n        packer_debug_end(\"static_string\");\r\n\r\n        return s;\r\n      }, function t_struct(type) {\r\n        packer_debug_start(\"struct \" + type.data);\r\n\r\n        var cls2 = thestruct.get_struct_cls(type.data);\r\n        var ret = thestruct.read_object(data, cls2, uctx);\r\n\r\n        packer_debug_end(\"struct\");\r\n        return ret;\r\n      }, function t_tstruct(type) {\r\n        packer_debug_start(\"tstruct\");\r\n\r\n        var id = struct_binpack.unpack_int(data, uctx);\r\n\r\n        packer_debug(\"-int \" + id);\r\n        if (!(id in thestruct.struct_ids)) {\r\n          packer_debug(\"struct id: \" + id);\r\n          console.trace();\r\n          console.log(id);\r\n          console.log(thestruct.struct_ids);\r\n          packer_debug_end(\"tstruct\");\r\n          throw new Error(\"Unknown struct type \" + id + \".\");\r\n        }\r\n\r\n        var cls2 = thestruct.get_struct_id(id);\r\n\r\n        packer_debug(\"struct name: \" + cls2.name);\r\n        cls2 = thestruct.struct_cls[cls2.name];\r\n\r\n        var ret = thestruct.read_object(data, cls2, uctx);\r\n\r\n        packer_debug_end(\"tstruct\");\r\n        return ret;\r\n      }, function t_array(type) {\r\n        packer_debug_start(\"array\");\r\n\r\n        var len = struct_binpack.unpack_int(data, uctx);\r\n        packer_debug(\"-int \" + len);\r\n\r\n        var arr = new Array(len);\r\n        for (var i = 0; i < len; i++) {\r\n          arr[i] = unpack_field(type.data.type);\r\n        }\r\n\r\n        packer_debug_end(\"array\");\r\n        return arr;\r\n      }, function t_iter(type) {\r\n        packer_debug_start(\"iter\");\r\n\r\n        var len = struct_binpack.unpack_int(data, uctx);\r\n        packer_debug(\"-int \" + len);\r\n\r\n        var arr = new Array(len);\r\n        for (var i = 0; i < len; i++) {\r\n          arr[i] = unpack_field(type.data.type);\r\n        }\r\n\r\n        packer_debug_end(\"iter\");\r\n        return arr;\r\n      }, function t_short(type) { //int\r\n        var ret = struct_binpack.unpack_short(data, uctx);\r\n\r\n        packer_debug(\"-short \" + ret);\r\n\r\n        return ret;\r\n      }, function t_byte(type) {\r\n        var ret = struct_binpack.unpack_byte(data, uctx);\r\n\r\n        packer_debug(\"-byte \" + ret);\r\n\r\n        return ret;\r\n      }, function t_bool(type) {\r\n        var ret = struct_binpack.unpack_byte(data, uctx);\r\n\r\n        packer_debug(\"-bool \" + ret);\r\n\r\n        return !!ret;\r\n      }\r\n    ];\r\n\r\n    function unpack_field(type) {\r\n      return unpack_funcs[type.type](type);\r\n    }\r\n\r\n    let was_run = false;\r\n\r\n    function load(obj) {\r\n      if (was_run) {\r\n        return;\r\n      }\r\n\r\n      was_run = true;\r\n\r\n      var fields = stt.fields;\r\n      var flen = fields.length;\r\n      for (var i = 0; i < flen; i++) {\r\n        var f = fields[i];\r\n        var val = unpack_field(f.type);\r\n        obj[f.name] = val;\r\n      }\r\n    }\r\n\r\n    if (cls.prototype.loadSTRUCT !== undefined) {\r\n      let obj;\r\n\r\n      if (cls.newSTRUCT !== undefined) {\r\n        obj = cls.newSTRUCT();\r\n      } else {\r\n        obj = new cls();\r\n      }\r\n\r\n      obj.loadSTRUCT(load);\r\n      return obj;\r\n    } else if (cls.fromSTRUCT !== undefined) {\r\n      console.warn(\"Warning: class \" + cls.name + \" is using deprecated fromSTRUCT interface; use newSTRUCT/loadSTRUCT instead\");\r\n      return cls.fromSTRUCT(load);\r\n    } else { //default case, make new instance and then call load() on it\r\n      let obj;\r\n      if (cls.newSTRUCT !== undefined) {\r\n        obj = cls.newSTRUCT();\r\n      } else {\r\n        obj = new cls();\r\n      }\r\n\r\n      load(obj);\r\n\r\n      return obj;\r\n    }\r\n  }\r\n}\r\n\r\n//main struct script manager\r\nvar manager = exports.manager = new STRUCT();\r\n\r\n//manager defaults to structjs.manager\r\nvar write_scripts = exports.write_scripts = function write_scripts(manager, include_code = false) {\r\n  if (manager === undefined)\r\n    manager = exports.manager;\r\n\r\n  var buf = \"\";\r\n\r\n  manager.forEach(function (stt) {\r\n    buf += STRUCT.fmt_struct(stt, false, !include_code) + \"\\n\";\r\n  });\r\n\r\n  var buf2 = buf;\r\n  buf = \"\";\r\n\r\n  for (var i = 0; i < buf2.length; i++) {\r\n    var c = buf2[i];\r\n    if (c === \"\\n\") {\r\n      buf += \"\\n\";\r\n      var i2 = i;\r\n      while (i < buf2.length && (buf2[i] === \" \" || buf2[i] === \"\\t\" || buf2[i] === \"\\n\")) {\r\n        i++;\r\n      }\r\n      if (i !== i2)\r\n        i--;\r\n    }\r\n    else {\r\n      buf += c;\r\n    }\r\n  }\r\n\r\n  return buf;\r\n}\r\n",
    "description": null,
    "longname": "C:/dev/nstructjs/src/struct_intern.js",
    "kind": "file",
    "name": "src/struct_intern.js",
    "__myFormatTag": 217
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "struct_util",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~struct_util",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "__myFormatTag": 109,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "struct_binpack",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~struct_binpack",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "__myFormatTag": 110,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "struct_parseutil",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~struct_parseutil",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "__myFormatTag": 111,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "struct_typesystem",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~struct_typesystem",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "__myFormatTag": 112,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "struct_parser",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~struct_parser",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "__myFormatTag": 113,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "StructTypeMap",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~StructTypeMap",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "__myFormatTag": 114,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "StructTypes",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~StructTypes",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "__myFormatTag": 115,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "Class",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~Class",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "__myFormatTag": 116,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "struct_parse",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~struct_parse",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "__myFormatTag": 117,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "StructEnum",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~StructEnum",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "__myFormatTag": 118,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "_static_envcode_null",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~_static_envcode_null",
    "access": "private",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "__myFormatTag": 119,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "debug_struct",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~debug_struct",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "__myFormatTag": 120,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "packdebug_tablevel",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~packdebug_tablevel",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "__myFormatTag": 121,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "gen_tabstr",
    "memberof": "src/struct_intern.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_intern.js~gen_tabstr",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "__myFormatTag": 122,
    "params": [
      {
        "name": "tot",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "_ws_env",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~_ws_env",
    "access": "private",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "__myFormatTag": 123,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "pack_callbacks",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~pack_callbacks",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "__myFormatTag": 124,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "do_pack",
    "memberof": "src/struct_intern.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_intern.js~do_pack",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 272,
    "undocument": true,
    "__myFormatTag": 125,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "val",
        "types": [
          "*"
        ]
      },
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "thestruct",
        "types": [
          "*"
        ]
      },
      {
        "name": "field",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "define_empty_class",
    "memberof": "src/struct_intern.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_intern.js~define_empty_class",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 277,
    "undocument": true,
    "__myFormatTag": 126,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 125,
    "static": true,
    "description": "",
    "interface": false,
    "kind": "class",
    "lineNumber": 298,
    "longname": "src/struct_intern.js~STRUCT",
    "memberof": "src/struct_intern.js",
    "name": "STRUCT",
    "export": true,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": "{STRUCT}",
    "__myFormatTag": 218,
    "access": "public"
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "name": "manager",
    "memberof": "src/struct_intern.js",
    "static": true,
    "longname": "src/struct_intern.js~manager",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 881,
    "undocument": true,
    "__myFormatTag": 128,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 127,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "<pre>manager defaults to structjs.manager</pre>",
    "kind": "function",
    "name": "write_scripts",
    "longname": "src/struct_intern.js~write_scripts",
    "memberof": "src/struct_intern.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "manager",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 325
      },
      {
        "description": "",
        "name": "include_code",
        "nullable": null,
        "optional": true,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 327
      }
    ],
    "importPath": "nstructjs/src/struct_intern.js",
    "importStyle": "{write_scripts}",
    "export": "true",
    "__myFormatTag": 323,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "static": true,
    "access": "public",
    "content": "\"use strict\";\r\nlet struct_util = require(\"./struct_util\");\r\nlet struct_parseutil = require(\"./struct_parseutil\");\r\n\r\n//the discontinuous id's are to make sure\r\n//the version I originally wrote (which had a few application-specific types)\r\n//and this one do not become totally incompatible.\r\nvar StructEnum = exports.StructEnum = {\r\n  T_INT    : 0,\r\n  T_FLOAT  : 1,\r\n  T_DOUBLE : 2,\r\n  T_STRING : 7,\r\n  T_STATIC_STRING : 8, //fixed-length string\r\n  T_STRUCT : 9, \r\n  T_TSTRUCT : 10,\r\n  T_ARRAY   : 11,\r\n  T_ITER    : 12,\r\n  T_SHORT   : 13,\r\n  T_BYTE    : 14,\r\n  T_BOOL    : 15\r\n};\r\n\r\nvar StructTypes = exports.StructTypes = {\r\n  \"int\": StructEnum.T_INT, \r\n  \"float\": StructEnum.T_FLOAT, \r\n  \"double\": StructEnum.T_DOUBLE, \r\n  \"string\": StructEnum.T_STRING,\r\n  \"static_string\": StructEnum.T_STATIC_STRING, \r\n  \"struct\": StructEnum.T_STRUCT, \r\n  \"abstract\": StructEnum.T_TSTRUCT, \r\n  \"array\": StructEnum.T_ARRAY, \r\n  \"iter\": StructEnum.T_ITER,\r\n  \"short\": StructEnum.T_SHORT,\r\n  \"byte\": StructEnum.T_BYTE,\r\n  \"bool\": StructEnum.T_BOOL\r\n};\r\n\r\nvar StructTypeMap = exports.StructTypeMap = {};\r\n\r\nfor (var k in StructTypes) {\r\n  StructTypeMap[StructTypes[k]] = k;\r\n}\r\n\r\nfunction gen_tabstr(t) {\r\n  var s=\"\";\r\n  for (var i=0; i<t; i++) {\r\n      s+=\"  \";\r\n  }\r\n  return s;\r\n}\r\n\r\nfunction StructParser() {\r\n  var basic_types=new struct_util.set([\r\n    \"int\", \"float\", \"double\", \"string\", \"short\", \"byte\", \"bool\"\r\n  ]);\r\n  \r\n  var reserved_tokens=new struct_util.set([\r\n    \"int\", \"float\", \"double\", \"string\", \"static_string\", \"array\", \r\n    \"iter\", \"abstract\", \"short\", \"byte\", \"bool\"\r\n  ]);\r\n\r\n  function tk(name, re, func) {\r\n    return new struct_parseutil.tokdef(name, re, func);\r\n  }\r\n  \r\n  var tokens=[\r\n    tk(\"ID\", /[a-zA-Z_]+[a-zA-Z0-9_\\.]*/, function(t) {\r\n      if (reserved_tokens.has(t.value)) {\r\n          t.type = t.value.toUpperCase();\r\n      }\r\n      return t;\r\n    }), tk(\"OPEN\", /\\{/), \r\n    tk(\"EQUALS\", /=/), \r\n    tk(\"CLOSE\", /}/), \r\n    tk(\"COLON\", /:/), \r\n    tk(\"SOPEN\", /\\[/), \r\n    tk(\"SCLOSE\", /\\]/), \r\n    tk(\"JSCRIPT\", /\\|/, function(t) {\r\n      var js=\"\";\r\n      var lexer=t.lexer;\r\n      while (lexer.lexpos<lexer.lexdata.length) {\r\n        var c=lexer.lexdata[lexer.lexpos];\r\n        if (c==\"\\n\")\r\n          break;\r\n        js+=c;\r\n        lexer.lexpos++;\r\n      }\r\n      if (js.endsWith(\";\")) {\r\n          js = js.slice(0, js.length-1);\r\n          lexer.lexpos--;\r\n      }\r\n      t.value = js.trim();\r\n      return t;\r\n    }), \r\n    tk(\"LPARAM\", /\\(/), \r\n    tk(\"RPARAM\", /\\)/), \r\n    tk(\"COMMA\", /,/), \r\n    tk(\"NUM\", /[0-9]+/), \r\n    tk(\"SEMI\", /;/), \r\n    tk(\"NEWLINE\", /\\n/, function(t) {\r\n      t.lexer.lineno+=1;\r\n    }),\r\n    tk(\"SPACE\", / |\\t/, function(t) {\r\n    })\r\n  ];\r\n  \r\n  reserved_tokens.forEach(function(rt) {\r\n    tokens.push(tk(rt.toUpperCase()));\r\n  });\r\n  \r\n  function errfunc(lexer) {\r\n    return true;\r\n  }\r\n  \r\n  var lex=new struct_parseutil.lexer(tokens, errfunc);\r\n  var parser=new struct_parseutil.parser(lex);\r\n  \r\n  function p_Static_String(p) {\r\n    p.expect(\"STATIC_STRING\");\r\n    p.expect(\"SOPEN\");\r\n    var num=p.expect(\"NUM\");\r\n    p.expect(\"SCLOSE\");\r\n    return {type: StructEnum.T_STATIC_STRING, data: {maxlength: num}}\r\n  }\r\n  \r\n  function p_DataRef(p) {\r\n    p.expect(\"DATAREF\");\r\n    p.expect(\"LPARAM\");\r\n    var tname=p.expect(\"ID\");\r\n    p.expect(\"RPARAM\");\r\n    return {type: StructEnum.T_DATAREF, data: tname}\r\n  }\r\n  \r\n  function p_Array(p) {\r\n    p.expect(\"ARRAY\");\r\n    p.expect(\"LPARAM\");\r\n    var arraytype=p_Type(p);\r\n    \r\n    var itername=\"\";\r\n    if (p.optional(\"COMMA\")) {\r\n        itername = arraytype.data.replace(/\"/g, \"\");\r\n        arraytype = p_Type(p);\r\n    }\r\n    \r\n    p.expect(\"RPARAM\");\r\n    return {type: StructEnum.T_ARRAY, data: {type: arraytype, iname: itername}}\r\n  }\r\n  \r\n  function p_Iter(p) {\r\n    p.expect(\"ITER\");\r\n    p.expect(\"LPARAM\");\r\n    var arraytype=p_Type(p);\r\n    var itername=\"\";\r\n    \r\n    if (p.optional(\"COMMA\")) {\r\n        itername = arraytype.data.replace(/\"/g, \"\");\r\n        arraytype = p_Type(p);\r\n    }\r\n    \r\n    p.expect(\"RPARAM\");\r\n    return {type: StructEnum.T_ITER, data: {type: arraytype, iname: itername}}\r\n  }\r\n  \r\n  function p_Abstract(p) {\r\n    p.expect(\"ABSTRACT\");\r\n    p.expect(\"LPARAM\");\r\n    var type=p.expect(\"ID\");\r\n    p.expect(\"RPARAM\");\r\n    return {type: StructEnum.T_TSTRUCT, data: type}\r\n  }\r\n  \r\n  function p_Type(p) {\r\n    var tok=p.peek();\r\n    \r\n    if (tok.type==\"ID\") {\r\n        p.next();\r\n        return {type: StructEnum.T_STRUCT, data: tok.value}\r\n    } else if (basic_types.has(tok.type.toLowerCase())) {\r\n        p.next();\r\n        return {type: StructTypes[tok.type.toLowerCase()]}\r\n    } else if (tok.type==\"ARRAY\") {\r\n        return p_Array(p);\r\n    } else if (tok.type==\"ITER\") {\r\n        return p_Iter(p);\r\n    } else if (tok.type==\"STATIC_STRING\") {\r\n        return p_Static_String(p);\r\n    } else if (tok.type==\"ABSTRACT\") {\r\n        return p_Abstract(p);\r\n    } else if (tok.type==\"DATAREF\") {\r\n        return p_DataRef(p);\r\n    } else {\r\n      p.error(tok, \"invalid type \"+tok.type);\r\n    }\r\n  }\r\n  \r\n  function p_ID_or_num(p) {\r\n    let t = p.peeknext();\r\n\r\n    if (t.type == \"NUM\") {\r\n      p.next();\r\n      return t.value;\r\n    } else {\r\n      return p.expect(\"ID\", \"struct field name\");\r\n    }\r\n  }\r\n  \r\n  function p_Field(p) {\r\n    var field={}\r\n    \r\n    field.name = p_ID_or_num(p);\r\n    p.expect(\"COLON\");\r\n    \r\n    field.type = p_Type(p);\r\n    field.set = undefined;\r\n    field.get = undefined;\r\n    \r\n    var tok=p.peek();\r\n    if (tok.type==\"JSCRIPT\") {\r\n        field.get = tok.value;\r\n        p.next();\r\n    }\r\n    \r\n    tok = p.peek();\r\n    if (tok.type==\"JSCRIPT\") {\r\n        field.set = tok.value;\r\n        p.next();\r\n    }\r\n    \r\n    p.expect(\"SEMI\");\r\n    return field;\r\n  }\r\n  \r\n  function p_Struct(p) {\r\n    var st={}\r\n    \r\n    st.name = p.expect(\"ID\", \"struct name\");\r\n    \r\n    st.fields = [];\r\n    st.id = -1;\r\n    var tok=p.peek();\r\n    var id=-1;\r\n    if (tok.type==\"ID\"&&tok.value==\"id\") {\r\n        p.next();\r\n        p.expect(\"EQUALS\");\r\n        st.id = p.expect(\"NUM\");\r\n    }\r\n    \r\n    p.expect(\"OPEN\");\r\n    while (1) {\r\n      if (p.at_end()) {\r\n          p.error(undefined);\r\n      }\r\n      else \r\n        if (p.optional(\"CLOSE\")) {\r\n          break;\r\n      }\r\n      else {\r\n        st.fields.push(p_Field(p));\r\n      }\r\n    }\r\n    return st;\r\n  }\r\n  parser.start = p_Struct;\r\n  return parser;\r\n}\r\n\r\nexports.struct_parse = StructParser();\r\n",
    "description": null,
    "longname": "C:/dev/nstructjs/src/struct_parser.js",
    "kind": "file",
    "name": "src/struct_parser.js",
    "__myFormatTag": 578
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "struct_util",
    "memberof": "src/struct_parser.js",
    "static": true,
    "longname": "src/struct_parser.js~struct_util",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "__myFormatTag": 131,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "variable",
    "name": "struct_parseutil",
    "memberof": "src/struct_parser.js",
    "static": true,
    "longname": "src/struct_parser.js~struct_parseutil",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "__myFormatTag": 132,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 131,
    "static": true,
    "export": true,
    "description": "<pre>the discontinuous id's are to make sure\nthe version I originally wrote (which had a few application-specific types)<pre>StructEnum = {\n    T_INT           :  0,\n    T_FLOAT         :  1,\n    T_DOUBLE        :  2,\n    T_STRING        :  7,\n    T_STATIC_STRING :  8, /*fixed-length string*/\n    T_STRUCT        :  9,\n    T_TSTRUCT       :  10,\n    T_ARRAY         :  11,\n    T_ITER          :  12,\n    T_SHORT         :  13,\n    T_BYTE          :  14,\n    T_BOOL          :  15,\n}\n</pre></pre>",
    "importPath": "nstructjs/src/struct_parser.js",
    "importStyle": "{StructEnum}",
    "interface": false,
    "kind": "variable",
    "lineNumber": 8,
    "longname": "src/struct_parser.js~StructEnum",
    "memberof": "src/struct_parser.js",
    "name": "StructEnum",
    "__myFormatTag": 579,
    "access": "public",
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "static": true,
    "export": true,
    "description": "<pre><pre>StructTypes = {\n    int             :  StructEnum.T_INT,\n    float           :  StructEnum.T_FLOAT,\n    double          :  StructEnum.T_DOUBLE,\n    string          :  StructEnum.T_STRING,\n    static_string   :  StructEnum.T_STATIC_STRING,\n    struct          :  StructEnum.T_STRUCT,\n    abstract        :  StructEnum.T_TSTRUCT,\n    array           :  StructEnum.T_ARRAY,\n    iter            :  StructEnum.T_ITER,\n    short           :  StructEnum.T_SHORT,\n    byte            :  StructEnum.T_BYTE,\n    bool            :  StructEnum.T_BOOL,\n}\n</pre></pre>",
    "importPath": "nstructjs/src/struct_parser.js",
    "importStyle": "{StructTypes}",
    "interface": false,
    "kind": "variable",
    "lineNumber": 23,
    "longname": "src/struct_parser.js~StructTypes",
    "memberof": "src/struct_parser.js",
    "name": "StructTypes",
    "__myFormatTag": 580,
    "access": "public",
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "static": true,
    "export": true,
    "description": "<pre><pre>StructTypeMap = {\n}\n</pre></pre>",
    "importPath": "nstructjs/src/struct_parser.js",
    "importStyle": "{StructTypeMap}",
    "interface": false,
    "kind": "variable",
    "lineNumber": 38,
    "longname": "src/struct_parser.js~StructTypeMap",
    "memberof": "src/struct_parser.js",
    "name": "StructTypeMap",
    "__myFormatTag": 581,
    "access": "public",
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "gen_tabstr",
    "memberof": "src/struct_parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_parser.js~gen_tabstr",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "__myFormatTag": 136,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "StructParser",
    "memberof": "src/struct_parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_parser.js~StructParser",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "__myFormatTag": 137,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 136,
    "static": true,
    "access": "public",
    "content": "\"use strict\";\r\n/*\r\nThe lexical scanner in this module was inspired by PyPLY\r\n\r\nhttp://www.dabeaz.com/ply/ply.html\r\n*/\r\n\r\nlet struct_util = require(\"./struct_util\");\r\nlet struct_typesystem = require(\"./struct_typesystem\");\r\n\r\nvar t;\r\n\r\nvar Class = struct_typesystem.Class;\r\n\r\nexports.token = class token {\r\n  constructor(type, val, lexpos, lineno, lexer, parser) {\r\n    this.type = type;\r\n    this.value = val;\r\n    this.lexpos = lexpos;\r\n    this.lineno = lineno;\r\n    this.lexer = lexer;\r\n    this.parser = parser;\r\n  }\r\n\r\n  toString() {\r\n    if (this.value != undefined)\r\n      return \"token(type=\" + this.type + \", value='\" + this.value + \"')\";\r\n    else\r\n      return \"token(type=\" + this.type + \")\";\r\n  }\r\n}\r\n\r\nexports.tokdef = class tokdef {\r\n  constructor(name, regexpr, func) {\r\n    this.name = name;\r\n    this.re = regexpr;\r\n    this.func = func;\r\n  }\r\n}\r\n\r\nvar PUTIL_ParseError = exports.PUTIL_ParseError = class PUTIL_ParseError extends Error {\r\n  constructor(msg) {\r\n    Error.call(this);\r\n  }\r\n}\r\n\r\nexports.lexer = class lexer {\r\n  constructor(tokdef, errfunc) {\r\n    this.tokdef = tokdef;\r\n    this.tokens = new Array();\r\n    this.lexpos = 0;\r\n    this.lexdata = \"\";\r\n    this.lineno = 0;\r\n    this.errfunc = errfunc;\r\n    this.tokints = {}\r\n    for (var i = 0; i < tokdef.length; i++) {\r\n      this.tokints[tokdef[i].name] = i;\r\n    }\r\n    this.statestack = [[\"__main__\", 0]];\r\n    this.states = {\"__main__\": [tokdef, errfunc]}\r\n    this.statedata = 0;\r\n  }\r\n\r\n  add_state(name, tokdef, errfunc) {\r\n    if (errfunc == undefined) {\r\n      errfunc = function (lexer) {\r\n        return true;\r\n      };\r\n    }\r\n    this.states[name] = [tokdef, errfunc];\r\n  }\r\n\r\n  tok_int(name) {\r\n  }\r\n\r\n  push_state(state, statedata) {\r\n    this.statestack.push([state, statedata]);\r\n    state = this.states[state];\r\n    this.statedata = statedata;\r\n    this.tokdef = state[0];\r\n    this.errfunc = state[1];\r\n  }\r\n\r\n  pop_state() {\r\n    var item = this.statestack[this.statestack.length - 1];\r\n    var state = this.states[item[0]];\r\n    this.tokdef = state[0];\r\n    this.errfunc = state[1];\r\n    this.statedata = item[1];\r\n  }\r\n\r\n  input(str) {\r\n    while (this.statestack.length > 1) {\r\n      this.pop_state();\r\n    }\r\n    this.lexdata = str;\r\n    this.lexpos = 0;\r\n    this.lineno = 0;\r\n    this.tokens = new Array();\r\n    this.peeked_tokens = [];\r\n  }\r\n\r\n  error() {\r\n    if (this.errfunc != undefined && !this.errfunc(this))\r\n      return;\r\n\r\n    console.log(\"Syntax error near line \" + this.lineno);\r\n\r\n    var next = Math.min(this.lexpos + 8, this.lexdata.length);\r\n    console.log(\"  \" + this.lexdata.slice(this.lexpos, next));\r\n\r\n    throw new PUTIL_ParseError(\"Parse error\");\r\n  }\r\n\r\n  peek() {\r\n    var tok = this.next(true);\r\n    if (tok == undefined)\r\n      return undefined;\r\n    this.peeked_tokens.push(tok);\r\n    return tok;\r\n  }\r\n\r\n  peeknext() {\r\n    if (this.peeked_tokens.length > 0) {\r\n      return this.peeked_tokens[0];\r\n    }\r\n\r\n    return this.peek();\r\n  }\r\n\r\n  at_end() {\r\n    return this.lexpos >= this.lexdata.length && this.peeked_tokens.length == 0;\r\n  }\r\n\r\n  //ignore_peek is optional, false\r\n  next(ignore_peek) {\r\n    if (!ignore_peek && this.peeked_tokens.length > 0) {\r\n      var tok = this.peeked_tokens[0];\r\n      this.peeked_tokens.shift();\r\n      return tok;\r\n    }\r\n\r\n    if (this.lexpos >= this.lexdata.length)\r\n      return undefined;\r\n\r\n    var ts = this.tokdef;\r\n    var tlen = ts.length;\r\n    var lexdata = this.lexdata.slice(this.lexpos, this.lexdata.length);\r\n    var results = [];\r\n\r\n    for (var i = 0; i < tlen; i++) {\r\n      var t = ts[i];\r\n      if (t.re == undefined)\r\n        continue;\r\n      var res = t.re.exec(lexdata);\r\n      if (res != null && res != undefined && res.index == 0) {\r\n        results.push([t, res]);\r\n      }\r\n    }\r\n\r\n    var max_res = 0;\r\n    var theres = undefined;\r\n    for (var i = 0; i < results.length; i++) {\r\n      var res = results[i];\r\n      if (res[1][0].length > max_res) {\r\n        theres = res;\r\n        max_res = res[1][0].length;\r\n      }\r\n    }\r\n\r\n    if (theres == undefined) {\r\n      this.error();\r\n      return;\r\n    }\r\n\r\n    var def = theres[0];\r\n    var token = new exports.token(def.name, theres[1][0], this.lexpos, this.lineno, this, undefined);\r\n    this.lexpos += token.value.length;\r\n\r\n    if (def.func) {\r\n      token = def.func(token);\r\n      if (token == undefined) {\r\n        return this.next();\r\n      }\r\n    }\r\n\r\n    return token;\r\n  }\r\n}\r\n\r\nconst parser = exports.parser = class parser {\r\n  constructor(lexer, errfunc) {\r\n    this.lexer = lexer;\r\n    this.errfunc = errfunc;\r\n    this.start = undefined;\r\n  }\r\n\r\n  parse(data, err_on_unconsumed) {\r\n    if (err_on_unconsumed == undefined)\r\n      err_on_unconsumed = true;\r\n\r\n    if (data != undefined)\r\n      this.lexer.input(data);\r\n\r\n    var ret = this.start(this);\r\n\r\n    if (err_on_unconsumed && !this.lexer.at_end() && this.lexer.next() != undefined) {\r\n      this.error(undefined, \"parser did not consume entire input\");\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  input(data) {\r\n    this.lexer.input(data);\r\n  }\r\n\r\n  error(token, msg) {\r\n    if (msg == undefined)\r\n      msg = \"\";\r\n    if (token == undefined)\r\n      var estr = \"Parse error at end of input: \" + msg;\r\n    else\r\n      estr = \"Parse error at line \" + (token.lineno + 1) + \": \" + msg;\r\n    var buf = \"1| \";\r\n    var ld = this.lexer.lexdata;\r\n    var l = 1;\r\n    for (var i = 0; i < ld.length; i++) {\r\n      var c = ld[i];\r\n      if (c == '\\n') {\r\n        l++;\r\n        buf += \"\\n\" + l + \"| \";\r\n      }\r\n      else {\r\n        buf += c;\r\n      }\r\n    }\r\n    console.log(\"------------------\");\r\n    console.log(buf);\r\n    console.log(\"==================\");\r\n    console.log(estr);\r\n    if (this.errfunc && !this.errfunc(token)) {\r\n      return;\r\n    }\r\n    throw new PUTIL_ParseError(estr);\r\n  }\r\n\r\n  peek() {\r\n    var tok = this.lexer.peek();\r\n    if (tok != undefined)\r\n      tok.parser = this;\r\n    return tok;\r\n  }\r\n\r\n  peeknext() {\r\n    var tok = this.lexer.peeknext();\r\n    if (tok != undefined)\r\n      tok.parser = this;\r\n    return tok;\r\n  }\r\n\r\n  next() {\r\n    var tok = this.lexer.next();\r\n    if (tok != undefined)\r\n      tok.parser = this;\r\n    return tok;\r\n  }\r\n\r\n  optional(type) {\r\n    var tok = this.peek();\r\n    if (tok == undefined)\r\n      return false;\r\n    if (tok.type == type) {\r\n      this.next();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  at_end() {\r\n    return this.lexer.at_end();\r\n  }\r\n\r\n  expect(type, msg) {\r\n    var tok = this.next();\r\n    if (msg == undefined)\r\n      msg = type;\r\n    if (tok == undefined || tok.type != type) {\r\n      this.error(tok, \"Expected \" + msg);\r\n    }\r\n    return tok.value;\r\n  }\r\n}\r\n\r\nfunction test_parser() {\r\n  var basic_types = new set([\"int\", \"float\", \"double\", \"vec2\", \"vec3\", \"vec4\", \"mat4\", \"string\"]);\r\n  var reserved_tokens = new set([\"int\", \"float\", \"double\", \"vec2\", \"vec3\", \"vec4\", \"mat4\", \"string\", \"static_string\", \"array\"]);\r\n\r\n  function tk(name, re, func) {\r\n    return new exports.tokdef(name, re, func);\r\n  }\r\n\r\n  var tokens = [tk(\"ID\", /[a-zA-Z]+[a-zA-Z0-9_]*/, function (t) {\r\n    if (reserved_tokens.has(t.value)) {\r\n      t.type = t.value.toUpperCase();\r\n    }\r\n    return t;\r\n  }), tk(\"OPEN\", /\\{/), tk(\"CLOSE\", /}/), tk(\"COLON\", /:/), tk(\"JSCRIPT\", /\\|/, function (t) {\r\n    var js = \"\";\r\n    var lexer = t.lexer;\r\n    while (lexer.lexpos < lexer.lexdata.length) {\r\n      var c = lexer.lexdata[lexer.lexpos];\r\n      if (c == \"\\n\")\r\n        break;\r\n      js += c;\r\n      lexer.lexpos++;\r\n    }\r\n    if (js.endsWith(\";\")) {\r\n      js = js.slice(0, js.length - 1);\r\n      lexer.lexpos--;\r\n    }\r\n    t.value = js;\r\n    return t;\r\n  }), tk(\"LPARAM\", /\\(/), tk(\"RPARAM\", /\\)/), tk(\"COMMA\", /,/), tk(\"NUM\", /[0-9]/), tk(\"SEMI\", /;/), tk(\"NEWLINE\", /\\n/, function (t) {\r\n    t.lexer.lineno += 1;\r\n  }), tk(\"SPACE\", / |\\t/, function (t) {\r\n  })];\r\n  var __iter_rt = __get_iter(reserved_tokens);\r\n  var rt;\r\n  while (1) {\r\n    var __ival_rt = __iter_rt.next();\r\n    if (__ival_rt.done) {\r\n      break;\r\n    }\r\n    rt = __ival_rt.value;\r\n    tokens.push(tk(rt.toUpperCase()));\r\n  }\r\n  var a = \"\\n  Loop {\\n    eid : int;\\n    flag : int;\\n    index : int;\\n    type : int;\\n\\n    co : vec3;\\n    no : vec3;\\n    loop : int | eid(loop);\\n    edges : array(e, int) | e.eid;\\n\\n    loops : array(Loop);\\n  }\\n  \";\r\n\r\n  function errfunc(lexer) {\r\n    return true;\r\n  }\r\n\r\n  var lex = new exports.lexer(tokens, errfunc);\r\n  console.log(\"Testing lexical scanner...\");\r\n  lex.input(a);\r\n  var token;\r\n  while (token = lex.next()) {\r\n    console.log(token.toString());\r\n  }\r\n  var parser = new exports.parser(lex);\r\n  parser.input(a);\r\n\r\n  function p_Array(p) {\r\n    p.expect(\"ARRAY\");\r\n    p.expect(\"LPARAM\");\r\n    var arraytype = p_Type(p);\r\n    var itername = \"\";\r\n    if (p.optional(\"COMMA\")) {\r\n      itername = arraytype;\r\n      arraytype = p_Type(p);\r\n    }\r\n    p.expect(\"RPARAM\");\r\n    return {type: \"array\", data: {type: arraytype, iname: itername}}\r\n  }\r\n\r\n  function p_Type(p) {\r\n    var tok = p.peek();\r\n    if (tok.type == \"ID\") {\r\n      p.next();\r\n      return {type: \"struct\", data: \"\\\"\" + tok.value + \"\\\"\"}\r\n    }\r\n    else if (basic_types.has(tok.type.toLowerCase())) {\r\n      p.next();\r\n      return {type: tok.type.toLowerCase()}\r\n    }\r\n    else if (tok.type == \"ARRAY\") {\r\n      return p_Array(p);\r\n    }\r\n    else {\r\n      p.error(tok, \"invalid type \" + tok.type);\r\n    }\r\n  }\r\n\r\n  function p_Field(p) {\r\n    var field = {}\r\n    console.log(\"-----\", p.peek().type);\r\n    field.name = p.expect(\"ID\", \"struct field name\");\r\n    p.expect(\"COLON\");\r\n    field.type = p_Type(p);\r\n    field.set = undefined;\r\n    field.get = undefined;\r\n    var tok = p.peek();\r\n    if (tok.type == \"JSCRIPT\") {\r\n      field.get = tok.value;\r\n      p.next();\r\n    }\r\n    tok = p.peek();\r\n    if (tok.type == \"JSCRIPT\") {\r\n      field.set = tok.value;\r\n      p.next();\r\n    }\r\n    p.expect(\"SEMI\");\r\n    return field;\r\n  }\r\n\r\n  function p_Struct(p) {\r\n    var st = {}\r\n    st.name = p.expect(\"ID\", \"struct name\");\r\n    st.fields = [];\r\n    p.expect(\"OPEN\");\r\n    while (1) {\r\n      if (p.at_end()) {\r\n        p.error(undefined);\r\n      }\r\n      else if (p.optional(\"CLOSE\")) {\r\n        break;\r\n      }\r\n      else {\r\n        st.fields.push(p_Field(p));\r\n      }\r\n    }\r\n    return st;\r\n  }\r\n\r\n  var ret = p_Struct(parser);\r\n  console.log(JSON.stringify(ret));\r\n}\r\n",
    "description": null,
    "longname": "C:/dev/nstructjs/src/struct_parseutil.js",
    "kind": "file",
    "name": "src/struct_parseutil.js",
    "__myFormatTag": 462
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "struct_util",
    "memberof": "src/struct_parseutil.js",
    "static": true,
    "longname": "src/struct_parseutil.js~struct_util",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_parseutil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "__myFormatTag": 139,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "struct_typesystem",
    "memberof": "src/struct_parseutil.js",
    "static": true,
    "longname": "src/struct_parseutil.js~struct_typesystem",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_parseutil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "__myFormatTag": 140,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "Class",
    "memberof": "src/struct_parseutil.js",
    "static": true,
    "longname": "src/struct_parseutil.js~Class",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_parseutil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "__myFormatTag": 141,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "static": true,
    "description": "",
    "interface": false,
    "kind": "class",
    "lineNumber": 15,
    "longname": "src/struct_parseutil.js~token",
    "memberof": "src/struct_parseutil.js",
    "name": "token",
    "export": true,
    "importPath": "nstructjs/src/struct_parseutil.js",
    "importStyle": "{token}",
    "__myFormatTag": 463,
    "access": "public"
  },
  {
    "__docId__": 141,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "constructor",
    "computed": false,
    "name": "constructor",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "type",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 470
      },
      {
        "description": "",
        "name": "val",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 472
      },
      {
        "description": "",
        "name": "lexpos",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 474
      },
      {
        "description": "",
        "name": "lineno",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 476
      },
      {
        "description": "",
        "name": "lexer",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 478
      },
      {
        "description": "",
        "name": "parser",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 480
      }
    ],
    "memberof": "src/struct_parseutil.js~token",
    "longname": "src/struct_parseutil.js~token#constructor",
    "__myFormatTag": 468,
    "access": "public"
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "type",
    "memberof": "src/struct_parseutil.js~token",
    "static": false,
    "longname": "src/struct_parseutil.js~token#type",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "__myFormatTag": 144,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "value",
    "memberof": "src/struct_parseutil.js~token",
    "static": false,
    "longname": "src/struct_parseutil.js~token#value",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "__myFormatTag": 145,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "lexpos",
    "memberof": "src/struct_parseutil.js~token",
    "static": false,
    "longname": "src/struct_parseutil.js~token#lexpos",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "__myFormatTag": 146,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "lineno",
    "memberof": "src/struct_parseutil.js~token",
    "static": false,
    "longname": "src/struct_parseutil.js~token#lineno",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "__myFormatTag": 147,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "lexer",
    "memberof": "src/struct_parseutil.js~token",
    "static": false,
    "longname": "src/struct_parseutil.js~token#lexer",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "__myFormatTag": 148,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "parser",
    "memberof": "src/struct_parseutil.js~token",
    "static": false,
    "longname": "src/struct_parseutil.js~token#parser",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "__myFormatTag": 149,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "toString",
    "generator": false,
    "params": [],
    "memberof": "src/struct_parseutil.js~token",
    "longname": "src/struct_parseutil.js~token#toString",
    "__myFormatTag": 482,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "static": true,
    "description": "",
    "interface": false,
    "kind": "class",
    "lineNumber": 33,
    "longname": "src/struct_parseutil.js~tokdef",
    "memberof": "src/struct_parseutil.js",
    "name": "tokdef",
    "export": true,
    "importPath": "nstructjs/src/struct_parseutil.js",
    "importStyle": "{tokdef}",
    "__myFormatTag": 464,
    "access": "public"
  },
  {
    "__docId__": 150,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "constructor",
    "computed": false,
    "name": "constructor",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "name",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 486
      },
      {
        "description": "",
        "name": "regexpr",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 488
      },
      {
        "description": "",
        "name": "func",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 490
      }
    ],
    "memberof": "src/struct_parseutil.js~tokdef",
    "longname": "src/struct_parseutil.js~tokdef#constructor",
    "__myFormatTag": 484,
    "access": "public"
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "name",
    "memberof": "src/struct_parseutil.js~tokdef",
    "static": false,
    "longname": "src/struct_parseutil.js~tokdef#name",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "__myFormatTag": 153,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "re",
    "memberof": "src/struct_parseutil.js~tokdef",
    "static": false,
    "longname": "src/struct_parseutil.js~tokdef#re",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "__myFormatTag": 154,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "func",
    "memberof": "src/struct_parseutil.js~tokdef",
    "static": false,
    "longname": "src/struct_parseutil.js~tokdef#func",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "__myFormatTag": 155,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "static": true,
    "description": "",
    "interface": false,
    "kind": "class",
    "lineNumber": 41,
    "longname": "src/struct_parseutil.js~PUTIL_ParseError",
    "memberof": "src/struct_parseutil.js",
    "name": "PUTIL_ParseError",
    "export": true,
    "importPath": "nstructjs/src/struct_parseutil.js",
    "importStyle": "{PUTIL_ParseError}",
    "__myFormatTag": 465,
    "access": "public"
  },
  {
    "__docId__": 155,
    "static": true,
    "description": "",
    "interface": false,
    "kind": "class",
    "lineNumber": 47,
    "longname": "src/struct_parseutil.js~lexer",
    "memberof": "src/struct_parseutil.js",
    "name": "lexer",
    "export": true,
    "importPath": "nstructjs/src/struct_parseutil.js",
    "importStyle": "{lexer}",
    "__myFormatTag": 466,
    "access": "public"
  },
  {
    "__docId__": 156,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "constructor",
    "computed": false,
    "name": "constructor",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "tokdef",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 498
      },
      {
        "description": "",
        "name": "errfunc",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 500
      }
    ],
    "memberof": "src/struct_parseutil.js~lexer",
    "longname": "src/struct_parseutil.js~lexer#constructor",
    "__myFormatTag": 496,
    "access": "public"
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "tokdef",
    "memberof": "src/struct_parseutil.js~lexer",
    "static": false,
    "longname": "src/struct_parseutil.js~lexer#tokdef",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "__myFormatTag": 159,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "tokens",
    "memberof": "src/struct_parseutil.js~lexer",
    "static": false,
    "longname": "src/struct_parseutil.js~lexer#tokens",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "__myFormatTag": 160,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "lexpos",
    "memberof": "src/struct_parseutil.js~lexer",
    "static": false,
    "longname": "src/struct_parseutil.js~lexer#lexpos",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "__myFormatTag": 161,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "lexdata",
    "memberof": "src/struct_parseutil.js~lexer",
    "static": false,
    "longname": "src/struct_parseutil.js~lexer#lexdata",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "__myFormatTag": 162,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "lineno",
    "memberof": "src/struct_parseutil.js~lexer",
    "static": false,
    "longname": "src/struct_parseutil.js~lexer#lineno",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "__myFormatTag": 163,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "errfunc",
    "memberof": "src/struct_parseutil.js~lexer",
    "static": false,
    "longname": "src/struct_parseutil.js~lexer#errfunc",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "__myFormatTag": 164,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "tokints",
    "memberof": "src/struct_parseutil.js~lexer",
    "static": false,
    "longname": "src/struct_parseutil.js~lexer#tokints",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "__myFormatTag": 165,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "statestack",
    "memberof": "src/struct_parseutil.js~lexer",
    "static": false,
    "longname": "src/struct_parseutil.js~lexer#statestack",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "__myFormatTag": 166,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "states",
    "memberof": "src/struct_parseutil.js~lexer",
    "static": false,
    "longname": "src/struct_parseutil.js~lexer#states",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "__myFormatTag": 167,
    "type": {
      "types": [
        "{\"__main__\": *}"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "statedata",
    "memberof": "src/struct_parseutil.js~lexer",
    "static": false,
    "longname": "src/struct_parseutil.js~lexer#statedata",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "__myFormatTag": 168,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 167,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "add_state",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "name",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 504
      },
      {
        "description": "",
        "name": "tokdef",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 506
      },
      {
        "description": "",
        "name": "errfunc",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 508
      }
    ],
    "memberof": "src/struct_parseutil.js~lexer",
    "longname": "src/struct_parseutil.js~lexer#add_state",
    "__myFormatTag": 502,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 168,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "tok_int",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "name",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 512
      }
    ],
    "memberof": "src/struct_parseutil.js~lexer",
    "longname": "src/struct_parseutil.js~lexer#tok_int",
    "__myFormatTag": 510,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 169,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "push_state",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "state",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 516
      },
      {
        "description": "",
        "name": "statedata",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 518
      }
    ],
    "memberof": "src/struct_parseutil.js~lexer",
    "longname": "src/struct_parseutil.js~lexer#push_state",
    "__myFormatTag": 514,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 173,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "pop_state",
    "generator": false,
    "params": [],
    "memberof": "src/struct_parseutil.js~lexer",
    "longname": "src/struct_parseutil.js~lexer#pop_state",
    "__myFormatTag": 520,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 177,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "input",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "str",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 524
      }
    ],
    "memberof": "src/struct_parseutil.js~lexer",
    "longname": "src/struct_parseutil.js~lexer#input",
    "__myFormatTag": 522,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 182,
    "kind": "member",
    "name": "peeked_tokens",
    "memberof": "src/struct_parseutil.js~lexer",
    "static": false,
    "longname": "src/struct_parseutil.js~lexer#peeked_tokens",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "__myFormatTag": 174,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 183,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "error",
    "generator": false,
    "params": [],
    "memberof": "src/struct_parseutil.js~lexer",
    "longname": "src/struct_parseutil.js~lexer#error",
    "__myFormatTag": 526,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 184,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "peek",
    "generator": false,
    "params": [],
    "memberof": "src/struct_parseutil.js~lexer",
    "longname": "src/struct_parseutil.js~lexer#peek",
    "__myFormatTag": 528,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "peeknext",
    "generator": false,
    "params": [],
    "memberof": "src/struct_parseutil.js~lexer",
    "longname": "src/struct_parseutil.js~lexer#peeknext",
    "__myFormatTag": 530,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "at_end",
    "generator": false,
    "params": [],
    "memberof": "src/struct_parseutil.js~lexer",
    "longname": "src/struct_parseutil.js~lexer#at_end",
    "__myFormatTag": 532,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 187,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "<pre>ignore_peek is optional, false</pre>",
    "kind": "method",
    "computed": false,
    "name": "next",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "ignore_peek",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 536
      }
    ],
    "memberof": "src/struct_parseutil.js~lexer",
    "longname": "src/struct_parseutil.js~lexer#next",
    "__myFormatTag": 534,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "static": true,
    "description": "",
    "interface": false,
    "kind": "class",
    "lineNumber": 191,
    "longname": "src/struct_parseutil.js~parser",
    "memberof": "src/struct_parseutil.js",
    "name": "parser",
    "export": true,
    "importPath": "nstructjs/src/struct_parseutil.js",
    "importStyle": "{parser}",
    "__myFormatTag": 467,
    "access": "public"
  },
  {
    "__docId__": 190,
    "kind": "function",
    "name": "test_parser",
    "memberof": "src/struct_parseutil.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_parseutil.js~test_parser",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_parseutil.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 294,
    "undocument": true,
    "__myFormatTag": 181,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 191,
    "static": true,
    "access": "public",
    "content": "\"use strict\";\r\n\r\n//zebra-style class system, see zebkit.org\r\n\r\nfunction ClassGetter(func) {\r\n  this.func = func;\r\n}\r\n\r\nfunction ClassSetter(func) {\r\n  this.func = func;\r\n}\r\n\r\nvar prototype_idgen = 1;\r\nvar defined_classes = exports.defined_classes = [];\r\n\r\nvar StaticMethod = function StaticMethod(func) {\r\n  this.func = func;\r\n};\r\n\r\n//parent is optional\r\nvar handle_statics = function (cls, methods, parent) {\r\n  for (var i = 0; i < methods.length; i++) {\r\n    var m = methods[i];\r\n\r\n    if (m instanceof StaticMethod) {\r\n      cls[m.func.name] = m.func;\r\n    }\r\n  }\r\n\r\n  //inherit from parent too.\r\n  //only inherit static methods added to parent with this module, though\r\n  if (parent != undefined) {\r\n    for (var k in parent) {\r\n      var v = parent[k];\r\n\r\n      if ((typeof v == \"object\" || typeof v == \"function\")\r\n        && \"_is_static_method\" in v && !(k in cls)) {\r\n        cls[k] = v;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar Class = exports.Class = function Class(methods) {\r\n  var construct = undefined;\r\n  var parent = undefined;\r\n\r\n  if (arguments.length > 1) {\r\n    //a parent was passed in\r\n\r\n    parent = methods;\r\n    methods = arguments[1];\r\n  }\r\n\r\n  for (var i = 0; i < methods.length; i++) {\r\n    var f = methods[i];\r\n\r\n    if (f.name == \"constructor\") {\r\n      construct = f;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (construct == undefined) {\r\n    console.trace(\"Warning, constructor was not defined\", methods);\r\n\r\n    if (parent != undefined) {\r\n      construct = function () {\r\n        parent.apply(this, arguments);\r\n      }\r\n    } else {\r\n      construct = function () {\r\n      }\r\n    }\r\n  }\r\n\r\n  if (parent != undefined) {\r\n    construct.prototype = Object.create(parent.prototype);\r\n  }\r\n\r\n  construct.prototype.__prototypeid__ = prototype_idgen++;\r\n  construct.__keystr__ = function () {\r\n    return this.prototype.__prototypeid__;\r\n  }\r\n\r\n  construct.__parent__ = parent;\r\n  construct.__statics__ = [];\r\n\r\n  var getters = {};\r\n  var setters = {};\r\n  var getset = {};\r\n\r\n  //handle getters/setters\r\n  for (var i = 0; i < methods.length; i++) {\r\n    var f = methods[i];\r\n    if (f instanceof ClassSetter) {\r\n      setters[f.func.name] = f.func;\r\n      getset[f.func.name] = 1;\r\n    } else if (f instanceof ClassGetter) {\r\n      getters[f.func.name] = f.func;\r\n      getset[f.func.name] = 1;\r\n    }\r\n  }\r\n\r\n  for (var k in getset) {\r\n    var def = {\r\n      enumerable: true,\r\n      configurable: true,\r\n      get: getters[k],\r\n      set: setters[k]\r\n    }\r\n\r\n    Object.defineProperty(construct.prototype, k, def);\r\n  }\r\n\r\n  handle_statics(construct, methods, parent);\r\n\r\n  if (parent != undefined)\r\n    construct.__parent__ = parent;\r\n\r\n  for (var i = 0; i < methods.length; i++) {\r\n    var f = methods[i];\r\n\r\n    if (f instanceof StaticMethod || f instanceof ClassGetter || f instanceof ClassSetter)\r\n      continue;\r\n\r\n    construct.prototype[f.name] = f;\r\n  }\r\n\r\n  return construct;\r\n}\r\n\r\nClass.getter = function (func) {\r\n  return new ClassGetter(func);\r\n}\r\nClass.setter = function (func) {\r\n  return new ClassSetter(func);\r\n}\r\n\r\nClass.static_method = function (func) {\r\n  func._is_static_method = true;\r\n\r\n  return new StaticMethod(func);\r\n}\r\n\r\nvar EmptySlot = {};\r\n\r\nvar set = exports.set = Class([\r\n  function constructor(input) {\r\n    this.items = [];\r\n    this.keys = {};\r\n    this.freelist = [];\r\n\r\n    this.length = 0;\r\n\r\n    if (input != undefined) {\r\n      input.forEach(function (item) {\r\n        this.add(item);\r\n      }, this);\r\n    }\r\n  },\r\n\r\n  function add(item) {\r\n    var key = item.__keystr__();\r\n\r\n    if (key in this.keys) return;\r\n\r\n    if (this.freelist.length > 0) {\r\n      var i = this.freelist.pop();\r\n\r\n      this.keys[key] = i;\r\n      items[i] = i;\r\n    } else {\r\n      var i = this.items.length;\r\n\r\n      this.keys[key] = i;\r\n      this.items.push(item);\r\n    }\r\n\r\n    this.length++;\r\n  },\r\n\r\n  function remove(item) {\r\n    var key = item.__keystr__();\r\n\r\n    if (!(key in this.keys)) {\r\n      console.trace(\"Warning, item\", item, \"is not in set\");\r\n      return;\r\n    }\r\n\r\n    var i = this.keys[key];\r\n    this.freelist.push(i);\r\n    this.items[i] = EmptySlot;\r\n\r\n    delete this.items[i];\r\n    this.length--;\r\n  },\r\n\r\n  function has(item) {\r\n    return item.__keystr__() in this.keys;\r\n  },\r\n\r\n  function forEach(func, thisvar) {\r\n    for (var i = 0; i < this.items.length; i++) {\r\n      var item = this.items[i];\r\n\r\n      if (item === EmptySlot)\r\n        continue;\r\n\r\n      thisvar != undefined ? func.call(thisvar, time) : func(item);\r\n    }\r\n  }\r\n]);\r\n",
    "description": null,
    "longname": "C:/dev/nstructjs/src/struct_typesystem.js",
    "kind": "file",
    "name": "src/struct_typesystem.js",
    "__myFormatTag": 342
  },
  {
    "__docId__": 192,
    "kind": "function",
    "name": "ClassGetter",
    "memberof": "src/struct_typesystem.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_typesystem.js~ClassGetter",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "__myFormatTag": 183,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "ClassSetter",
    "memberof": "src/struct_typesystem.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_typesystem.js~ClassSetter",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "__myFormatTag": 184,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "variable",
    "name": "prototype_idgen",
    "memberof": "src/struct_typesystem.js",
    "static": true,
    "longname": "src/struct_typesystem.js~prototype_idgen",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "__myFormatTag": 185,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 195,
    "kind": "variable",
    "name": "defined_classes",
    "memberof": "src/struct_typesystem.js",
    "static": true,
    "longname": "src/struct_typesystem.js~defined_classes",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "__myFormatTag": 186,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 196,
    "kind": "function",
    "name": "StaticMethod",
    "memberof": "src/struct_typesystem.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_typesystem.js~StaticMethod",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "__myFormatTag": 187,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 197,
    "kind": "function",
    "name": "handle_statics",
    "memberof": "src/struct_typesystem.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_typesystem.js~handle_statics",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "__myFormatTag": 188,
    "params": [
      {
        "name": "cls",
        "types": [
          "*"
        ]
      },
      {
        "name": "methods",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 198,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "Class",
    "longname": "src/struct_typesystem.js~Class",
    "memberof": "src/struct_typesystem.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "methods",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 345
      }
    ],
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": "{Class}",
    "export": "true",
    "__myFormatTag": 343,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "function",
    "name": "getter",
    "memberof": "src/struct_typesystem.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_typesystem.js~getter",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "__myFormatTag": 190,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 200,
    "kind": "function",
    "name": "setter",
    "memberof": "src/struct_typesystem.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_typesystem.js~setter",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "__myFormatTag": 191,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "static_method",
    "memberof": "src/struct_typesystem.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_typesystem.js~static_method",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 140,
    "undocument": true,
    "__myFormatTag": 192,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 202,
    "kind": "variable",
    "name": "EmptySlot",
    "memberof": "src/struct_typesystem.js",
    "static": true,
    "longname": "src/struct_typesystem.js~EmptySlot",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 146,
    "undocument": true,
    "__myFormatTag": 193,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 203,
    "kind": "variable",
    "name": "set",
    "memberof": "src/struct_typesystem.js",
    "static": true,
    "longname": "src/struct_typesystem.js~set",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_typesystem.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "__myFormatTag": 194,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 204,
    "static": true,
    "access": "public",
    "content": "let struct_typesystem = require(\"./struct_typesystem\");\r\n\r\nvar Class = struct_typesystem.Class;\r\nvar _o_basic_types = {\"String\": 0, \"Number\": 0, \"Array\": 0, \"Function\": 0};\r\n\r\nfunction isNodeJS() {\r\n  ret = typeof process !== \"undefined\";\r\n  ret = ret && process.release;\r\n  ret = ret && process.release.name === \"node\";\r\n  ret = ret && process.version;\r\n\r\n  return !!ret;\r\n}\r\n\r\nlet is_obj_lit = exports.is_obj_lit = function is_obj_lit(obj) {\r\n  if (typeof obj !== \"object\") {\r\n    return false;\r\n  }\r\n  \r\n  let good = obj.__proto__ && obj.__proto__.constructor && obj.__proto__.constructor === Object;\r\n\r\n  if (good) {\r\n    return true;\r\n  }\r\n\r\n  let bad = typeof obj !== \"object\";\r\n  bad = bad || obj.constructor.name in _o_basic_types;\r\n  bad = bad || obj instanceof String;\r\n  bad = bad || obj instanceof Number;\r\n  bad = bad || obj instanceof Boolean;\r\n  bad = bad || obj instanceof Function;\r\n  bad = bad || obj instanceof Array;\r\n  bad = bad || obj instanceof Set;\r\n  bad = bad || (obj.__proto__.constructor && obj.__proto__.constructor !== Object);\r\n\r\n  return !bad;\r\n}\r\n_nGlobal.is_obj_lit = is_obj_lit;\r\n\r\nfunction set_getkey(obj) {\r\n  if (typeof obj == \"number\" || typeof obj == \"boolean\")\r\n    return \"\" + obj;\r\n  else if (typeof obj == \"string\")\r\n    return obj;\r\n  else\r\n    return obj.__keystr__();\r\n}\r\n\r\nexports.get_callstack = function get_callstack(err) {\r\n  var callstack = [];\r\n  var isCallstackPopulated = false;\r\n\r\n  var err_was_undefined = err == undefined;\r\n\r\n  if (err == undefined) {\r\n    try {\r\n      _idontexist.idontexist += 0; //doesn't exist- that's the point\r\n    } catch (err1) {\r\n      err = err1;\r\n    }\r\n  }\r\n\r\n  if (err != undefined) {\r\n    if (err.stack) { //Firefox\r\n      var lines = err.stack.split('\\n');\r\n      var len = lines.length;\r\n      for (var i = 0; i < len; i++) {\r\n        if (1) {\r\n          lines[i] = lines[i].replace(/@http\\:\\/\\/.*\\//, \"|\")\r\n          var l = lines[i].split(\"|\")\r\n          lines[i] = l[1] + \": \" + l[0]\r\n          lines[i] = lines[i].trim()\r\n          callstack.push(lines[i]);\r\n        }\r\n      }\r\n\r\n      //Remove call to printStackTrace()\r\n      if (err_was_undefined) {\r\n        //callstack.shift();\r\n      }\r\n      isCallstackPopulated = true;\r\n    }\r\n    else if (window.opera && e.message) { //Opera\r\n      var lines = err.message.split('\\n');\r\n      var len = lines.length;\r\n      for (var i = 0; i < len; i++) {\r\n        if (lines[i].match(/^\\s*[A-Za-z0-9\\-_\\$]+\\(/)) {\r\n          var entry = lines[i];\r\n          //Append next line also since it has the file info\r\n          if (lines[i + 1]) {\r\n            entry += ' at ' + lines[i + 1];\r\n            i++;\r\n          }\r\n          callstack.push(entry);\r\n        }\r\n      }\r\n      //Remove call to printStackTrace()\r\n      if (err_was_undefined) {\r\n        callstack.shift();\r\n      }\r\n      isCallstackPopulated = true;\r\n    }\r\n  }\r\n\r\n  var limit = 24;\r\n  if (!isCallstackPopulated) { //IE and Safari\r\n    var currentFunction = arguments.callee.caller;\r\n    var i = 0;\r\n    while (currentFunction && i < 24) {\r\n      var fn = currentFunction.toString();\r\n      var fname = fn.substring(fn.indexOf(\"function\") + 8, fn.indexOf('')) || 'anonymous';\r\n      callstack.push(fname);\r\n      currentFunction = currentFunction.caller;\r\n\r\n      i++;\r\n    }\r\n  }\r\n\r\n  return callstack;\r\n}\r\n\r\nexports.print_stack = function print_stack(err) {\r\n  try {\r\n    var cs = exports.get_callstack(err);\r\n  } catch (err2) {\r\n    console.log(\"Could not fetch call stack.\");\r\n    return;\r\n  }\r\n\r\n  console.log(\"Callstack:\");\r\n  for (var i = 0; i < cs.length; i++) {\r\n    console.log(cs[i]);\r\n  }\r\n}\r\n\r\nvar set = exports.set = Class([\r\n  function constructor(input) {\r\n    this.items = [];\r\n    this.keys = {};\r\n    this.freelist = [];\r\n\r\n    this.length = 0;\r\n\r\n    if (input != undefined && input instanceof Array) {\r\n      for (var i = 0; i < input.length; i++) {\r\n        this.add(input[i]);\r\n      }\r\n    } else if (input != undefined && input.forEach != undefined) {\r\n      input.forEach(function (item) {\r\n        this.add(input[i]);\r\n      }, this);\r\n    }\r\n  },\r\n  function add(obj) {\r\n    var key = set_getkey(obj);\r\n    if (key in this.keys) return;\r\n\r\n    if (this.freelist.length > 0) {\r\n      var i = this.freelist.pop();\r\n      this.keys[key] = i;\r\n      this.items[i] = obj;\r\n    } else {\r\n      this.keys[key] = this.items.length;\r\n      this.items.push(obj);\r\n    }\r\n\r\n    this.length++;\r\n  },\r\n  function remove(obj, raise_error) {\r\n    var key = set_getkey(obj);\r\n\r\n    if (!(keystr in this.keys)) {\r\n      if (raise_error)\r\n        throw new Error(\"Object not in set\");\r\n      else\r\n        console.trace(\"Object not in set\", obj);\r\n      return;\r\n    }\r\n\r\n    var i = this.keys[keystr];\r\n\r\n    this.freelist.push(i);\r\n    this.items[i] = undefined;\r\n\r\n    delete this.keys[keystr];\r\n    this.length--;\r\n  },\r\n\r\n  function has(obj) {\r\n    return set_getkey(obj) in this.keys;\r\n  },\r\n\r\n  function forEach(func, thisvar) {\r\n    for (var i = 0; i < this.items.length; i++) {\r\n      var item = this.items[i];\r\n\r\n      if (item == undefined) continue;\r\n\r\n      if (thisvar != undefined)\r\n        func.call(thisvar, item);\r\n      else\r\n        func(item);\r\n    }\r\n  }\r\n]);\r\n\r\nvar IDGen = exports.IDGen = Class([\r\n  function constructor() {\r\n    this.cur_id = 1;\r\n  },\r\n\r\n  function gen_id() {\r\n    return this.cur_id++;\r\n  },\r\n\r\n  Class.static_method(function fromSTRUCT(reader) {\r\n    var ret = new IDGen();\r\n    reader(ret);\r\n    return ret;\r\n  })\r\n]);\r\n\r\nIDGen.STRUCT = [\r\n  \"struct_util.IDGen {\",\r\n  \"  cur_id : int;\",\r\n  \"}\"\r\n].join(\"\\n\");\r\n",
    "description": null,
    "longname": "C:/dev/nstructjs/src/struct_util.js",
    "kind": "file",
    "name": "src/struct_util.js",
    "__myFormatTag": 329
  },
  {
    "__docId__": 205,
    "kind": "variable",
    "name": "struct_typesystem",
    "memberof": "src/struct_util.js",
    "static": true,
    "longname": "src/struct_util.js~struct_typesystem",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "__myFormatTag": 196,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 206,
    "kind": "variable",
    "name": "Class",
    "memberof": "src/struct_util.js",
    "static": true,
    "longname": "src/struct_util.js~Class",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "__myFormatTag": 197,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 207,
    "kind": "variable",
    "name": "_o_basic_types",
    "memberof": "src/struct_util.js",
    "static": true,
    "longname": "src/struct_util.js~_o_basic_types",
    "access": "private",
    "export": false,
    "importPath": "nstructjs/src/struct_util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "__myFormatTag": 198,
    "type": {
      "types": [
        "{\"String\": *, \"Number\": *, \"Array\": *, \"Function\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 208,
    "kind": "function",
    "name": "isNodeJS",
    "memberof": "src/struct_util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_util.js~isNodeJS",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "__myFormatTag": 199,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 209,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "is_obj_lit",
    "longname": "src/struct_util.js~is_obj_lit",
    "memberof": "src/struct_util.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "obj",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 332
      }
    ],
    "importPath": "nstructjs/src/struct_util.js",
    "importStyle": "{is_obj_lit}",
    "export": "true",
    "__myFormatTag": 330,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "function",
    "name": "set_getkey",
    "memberof": "src/struct_util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/struct_util.js~set_getkey",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "__myFormatTag": 201,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 211,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "get_callstack",
    "longname": "src/struct_util.js~get_callstack",
    "memberof": "src/struct_util.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "err",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 336
      }
    ],
    "importPath": "nstructjs/src/struct_util.js",
    "importStyle": "{get_callstack}",
    "export": "true",
    "__myFormatTag": 334,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "function",
    "name": "print_stack",
    "longname": "src/struct_util.js~print_stack",
    "memberof": "src/struct_util.js",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "err",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 340
      }
    ],
    "importPath": "nstructjs/src/struct_util.js",
    "importStyle": "{print_stack}",
    "export": "true",
    "__myFormatTag": 338,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 213,
    "kind": "variable",
    "name": "set",
    "memberof": "src/struct_util.js",
    "static": true,
    "longname": "src/struct_util.js~set",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "__myFormatTag": 204,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 214,
    "kind": "variable",
    "name": "IDGen",
    "memberof": "src/struct_util.js",
    "static": true,
    "longname": "src/struct_util.js~IDGen",
    "access": "public",
    "export": false,
    "importPath": "nstructjs/src/struct_util.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "__myFormatTag": 205,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# nSTRUCT.js\r\n\r\nnSTRUCT.js is a [ProtoBuf-like](https://developers.google.com/protocol-buffers/docs/overview)\r\nserialization system for JavaScript.\r\nIt's designed with JavaScript in mind, and supports direct serialization/deserialization\r\nof objects (unlike ProtoBuf or JSON, which build intermediary objects).\r\n\r\n## Documentation\r\n\r\nSee [the wiki](https://github.com/joeedh/STRUCT/wiki/Intro-and-Examples) for more information.\r\nOr [here](Intro-and-Examples) if this was build with ESDoc;\r\n\r\n## Build\r\n\r\n    r.js -o build.js\r\n\r\n\r\n",
    "longname": "C:\\dev\\nstructjs\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public",
    "__myFormatTag": 206
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"nstructjs\",\r\n  \"author\": \"Joseph Eagar\",\r\n  \"version\": \"0.6.7\",\r\n  \"main\": \"nstructjs.js\",\r\n  \"description\": \"ProtoBuf-like serialization system optimized for JS\",\r\n  \"repository\": \"git://github.com/joeedh/STRUCT.git\",\r\n  \"dependencies\": {\r\n    \"acorn\": \"^7.0.0\",\r\n    \"acorn-walk\": \"^7.1.1\",\r\n    \"almond\": \"^0.3.1\",\r\n    \"requirejs\": \"^2.1.17\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/parser\": \"^7.9.6\",\r\n    \"@babel/traverse\": \"^7.9.6\",\r\n    \"@rollup/plugin-commonjs\": \"^11.1.0\",\r\n    \"babel\": \"^6.23.0\",\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"rollup\": \"^2.10.2\",\r\n    \"rollup-plugin-cjs-es\": \"^1.0.0\"\r\n  }\r\n}\r\n",
    "longname": "C:\\dev\\nstructjs\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public",
    "__myFormatTag": 207
  },
  {
    "__docId__": 218,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "constructor",
    "computed": false,
    "name": "constructor",
    "generator": false,
    "params": [],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#constructor",
    "__myFormatTag": 219,
    "access": "public"
  },
  {
    "__docId__": 219,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "forEach",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "func",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 223
      },
      {
        "description": "",
        "name": "thisvar",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 225
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#forEach",
    "__myFormatTag": 221,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 220,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "<pre>defaults to structjs.manager</pre>",
    "kind": "method",
    "computed": false,
    "name": "parse_structs",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "buf",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 229
      },
      {
        "description": "",
        "name": "defined_classes",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 231
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#parse_structs",
    "__myFormatTag": 227,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 221,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "register",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "cls",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 235
      },
      {
        "description": "",
        "name": "structName",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 237
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#register",
    "__myFormatTag": 233,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 222,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "add_class",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "cls",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 241
      },
      {
        "description": "",
        "name": "structName",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 243
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#add_class",
    "__myFormatTag": 239,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "get_struct_id",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "id",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 247
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#get_struct_id",
    "__myFormatTag": 245,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 224,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "get_struct",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "name",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 251
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#get_struct",
    "__myFormatTag": 249,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "get_struct_cls",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "name",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 255
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#get_struct_cls",
    "__myFormatTag": 253,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "inherit",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "child",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 259
      },
      {
        "description": "",
        "name": "parent",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 261
      },
      {
        "description": "",
        "name": "structName",
        "nullable": null,
        "optional": true,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 263
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#inherit",
    "__myFormatTag": 257,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "<pre>* invoke loadSTRUCT methods on parent objects.  note that\r\n   reader() is only called once.  it is called however.</pre>",
    "kind": "method",
    "computed": false,
    "name": "Super",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "obj",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 267
      },
      {
        "description": "",
        "name": "reader",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 269
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#Super",
    "__myFormatTag": 265,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "<pre>* deprecated.  used with old fromSTRUCT interface. </pre>",
    "kind": "method",
    "computed": false,
    "name": "chain_fromSTRUCT",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "cls",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 273
      },
      {
        "description": "",
        "name": "reader",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 275
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#chain_fromSTRUCT",
    "__myFormatTag": 271,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 229,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "formatStruct",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "stt",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 279
      },
      {
        "description": "",
        "name": "internal_only",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 281
      },
      {
        "description": "",
        "name": "no_helper_js",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 283
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#formatStruct",
    "__myFormatTag": 277,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "static": true,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "fmt_struct",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "stt",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 287
      },
      {
        "description": "",
        "name": "internal_only",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 289
      },
      {
        "description": "",
        "name": "no_helper_js",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 291
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#fmt_struct",
    "__myFormatTag": 285,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "_env_call",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "code",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 295
      },
      {
        "description": "",
        "name": "obj",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 297
      },
      {
        "description": "",
        "name": "env",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 299
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#_env_call",
    "__myFormatTag": 293,
    "access": "private",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "write_struct",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "data",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 303
      },
      {
        "description": "",
        "name": "obj",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 305
      },
      {
        "description": "",
        "name": "stt",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 307
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#write_struct",
    "__myFormatTag": 301,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "write_object",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "data",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 311
      },
      {
        "description": "",
        "name": "obj",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 313
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#write_object",
    "__myFormatTag": 309,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 234,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "read_object",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "data",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 317
      },
      {
        "description": "",
        "name": "cls_or_struct_id",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 319
      },
      {
        "description": "",
        "name": "uctx",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 321
      }
    ],
    "memberof": "src/struct_intern.js~STRUCT",
    "longname": "src/struct_intern.js~STRUCT#read_object",
    "__myFormatTag": 315,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "constructor",
    "computed": false,
    "name": "constructor",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "msg",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 494
      }
    ],
    "memberof": "src/struct_parseutil.js~PUTIL_ParseError",
    "longname": "src/struct_parseutil.js~PUTIL_ParseError#constructor",
    "__myFormatTag": 492,
    "access": "public"
  },
  {
    "__docId__": 258,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "constructor",
    "computed": false,
    "name": "constructor",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "lexer",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 540
      },
      {
        "description": "",
        "name": "errfunc",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 542
      }
    ],
    "memberof": "src/struct_parseutil.js~parser",
    "longname": "src/struct_parseutil.js~parser#constructor",
    "__myFormatTag": 538,
    "access": "public"
  },
  {
    "__docId__": 259,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "parse",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "data",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 546
      },
      {
        "description": "",
        "name": "err_on_unconsumed",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 548
      }
    ],
    "memberof": "src/struct_parseutil.js~parser",
    "longname": "src/struct_parseutil.js~parser#parse",
    "__myFormatTag": 544,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 260,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "input",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "data",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 552
      }
    ],
    "memberof": "src/struct_parseutil.js~parser",
    "longname": "src/struct_parseutil.js~parser#input",
    "__myFormatTag": 550,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "error",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "token",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 556
      },
      {
        "description": "",
        "name": "msg",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 558
      }
    ],
    "memberof": "src/struct_parseutil.js~parser",
    "longname": "src/struct_parseutil.js~parser#error",
    "__myFormatTag": 554,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 262,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "peek",
    "generator": false,
    "params": [],
    "memberof": "src/struct_parseutil.js~parser",
    "longname": "src/struct_parseutil.js~parser#peek",
    "__myFormatTag": 560,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 263,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "peeknext",
    "generator": false,
    "params": [],
    "memberof": "src/struct_parseutil.js~parser",
    "longname": "src/struct_parseutil.js~parser#peeknext",
    "__myFormatTag": 562,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "next",
    "generator": false,
    "params": [],
    "memberof": "src/struct_parseutil.js~parser",
    "longname": "src/struct_parseutil.js~parser#next",
    "__myFormatTag": 564,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "optional",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "type",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 568
      }
    ],
    "memberof": "src/struct_parseutil.js~parser",
    "longname": "src/struct_parseutil.js~parser#optional",
    "__myFormatTag": 566,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "at_end",
    "generator": false,
    "params": [],
    "memberof": "src/struct_parseutil.js~parser",
    "longname": "src/struct_parseutil.js~parser#at_end",
    "__myFormatTag": 570,
    "access": "public",
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 267,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "expect",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "type",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 574
      },
      {
        "description": "",
        "name": "msg",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 576
      }
    ],
    "memberof": "src/struct_parseutil.js~parser",
    "longname": "src/struct_parseutil.js~parser#expect",
    "__myFormatTag": 572,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 275,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "<pre>\r\nfile format:\r\n  magic signature              : 4 bytes\r\n  file version major           : 2 bytes\r\n  file version minor           : 1 bytes\r\n  file version micro           : 1 bytes\r\n  length of struct scripts     : 4 bytes\r\n  struct scripts for this file : ...\r\n  \r\n  block:\r\n    magic signature for block              : 4 bytes\r\n    length of data  (not including header) : 4 bytes\r\n    id of struct type                      : 4 bytes\r\n    \r\n    data                                   : ...\r\n</pre>",
    "kind": "constructor",
    "computed": false,
    "name": "constructor",
    "generator": false,
    "params": [],
    "memberof": "src/struct_filehelper.js~FileParams",
    "longname": "src/struct_filehelper.js~FileParams#constructor",
    "__myFormatTag": 587,
    "access": "public"
  },
  {
    "__docId__": 276,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "<pre>used to define blocks</pre>",
    "kind": "constructor",
    "computed": false,
    "name": "constructor",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "type_magic",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 591
      },
      {
        "description": "",
        "name": "data",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 593
      }
    ],
    "memberof": "src/struct_filehelper.js~Block",
    "longname": "src/struct_filehelper.js~Block#constructor",
    "__myFormatTag": 589,
    "access": "public"
  },
  {
    "__docId__": 277,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "<pre>(it will convert to FileParams)</pre>",
    "kind": "constructor",
    "computed": false,
    "name": "constructor",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "params",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 597
      }
    ],
    "memberof": "src/struct_filehelper.js~FileHelper",
    "longname": "src/struct_filehelper.js~FileHelper#constructor",
    "__myFormatTag": 595,
    "access": "public"
  },
  {
    "__docId__": 278,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "read",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "dataview",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 601
      }
    ],
    "memberof": "src/struct_filehelper.js~FileHelper",
    "longname": "src/struct_filehelper.js~FileHelper#read",
    "__myFormatTag": 599,
    "access": "public",
    "return": null
  },
  {
    "__docId__": 279,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "write",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "blocks",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 605
      }
    ],
    "memberof": "src/struct_filehelper.js~FileHelper",
    "longname": "src/struct_filehelper.js~FileHelper#write",
    "__myFormatTag": 603,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 280,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "writeBase64",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "blocks",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 609
      }
    ],
    "memberof": "src/struct_filehelper.js~FileHelper",
    "longname": "src/struct_filehelper.js~FileHelper#writeBase64",
    "__myFormatTag": 607,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "makeBlock",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "type",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 613
      },
      {
        "description": "",
        "name": "data",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 615
      }
    ],
    "memberof": "src/struct_filehelper.js~FileHelper",
    "longname": "src/struct_filehelper.js~FileHelper#makeBlock",
    "__myFormatTag": 611,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "static": false,
    "accesss": null,
    "async": false,
    "description": "",
    "kind": "method",
    "computed": false,
    "name": "readBase64",
    "generator": false,
    "params": [
      {
        "description": "",
        "name": "base64",
        "nullable": null,
        "optional": false,
        "spread": false,
        "types": [
          "*"
        ],
        "__myFormatTag": 619
      }
    ],
    "memberof": "src/struct_filehelper.js~FileHelper",
    "longname": "src/struct_filehelper.js~FileHelper#readBase64",
    "__myFormatTag": 617,
    "access": "public",
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "manualIndex",
    "content": "[Intro and Examples](Intro-and-Examples)\r\n",
    "longname": "C:\\dev\\nstructjs\\wiki\\Home.md",
    "name": "./wiki/Home.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\dev\\nstructjs\\wiki\\Home.md",
    "name": "./wiki/Home.md",
    "content": "[Intro and Examples](Intro-and-Examples)\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\dev\\nstructjs\\wiki\\Intro-and-Examples.md",
    "name": "./wiki/Intro-and-Examples.md",
    "content": "# Introduction\r\n\r\n[STRUCT](@STRUCT) is a ProtoBuf-like binary serialization system for JavaScript.  Developed for production use, it minimizes both storage space and object creation (the source of virtually all performance problems in JS).  The original use case was implementing undo, which required a fast method of writing the application state into a memory file.\r\n\r\nSTRUCT differs from ProtoBuf in that it is tied to JS and that it [compiles its equivalent to .proto files](https://developers.google.com/protocol-buffers/docs/proto#simple) at runtime.  In fact, these \"files\" are usually embedded in the JS code.\r\n\r\n# Direct serialization of objects\r\n\r\nUnlike ProtoBuf, STRUCT is designed to serialize and deserialize existing JS object types.  It does not generate object classes for you, it uses the ones you already have.  This avoids a great deal of duplicate object creation, which in large applications can lead to significant performance loss.\r\n\r\n# Example\r\n\r\nHere's a simple example of using STRUCT:\r\n\r\n    class SomeClass {\r\n      constructor(an_object_reference)\r\n           this.a = 0;\r\n           this.b = \"a string\";\r\n           this.c = an_object_reference;\r\n           this.d = new SomeOtherClass();\r\n           this.e = true;\r\n           this.f = 1.23432;\r\n        }\r\n      \r\n        loadSTRUCT(reader) {\r\n          reader(this);\r\n          //if you wanted to include parent class's loadSTRUCT, \r\n          //call super.loadSTRUCT here *after reader has been called*\r\n          \r\n           //turn integer id back into object reference\r\n           ret.c = lookup_object_from_uuid(ret.c);\r\n        }\r\n    }\r\n\r\n    SomeClass.STRUCT = '\r\n      mymodule.SomeClass {\r\n        a : int;\r\n        b : string;\r\n        c : int | obj.c.uuid;\r\n        d : SomeOtherClass;\r\n        e : bool;\r\n        f : float;\r\n      }\r\n    ';\r\n\r\n    nstructjs.manager.add_class(SomeClass);\r\n\r\n\r\n\r\n\r\nLet's look at the STRUCT script:\r\n\r\n`        \"mymodule.SomeClass {\",`\r\n\r\nThis has the name of our class as well as a module prefix (which is optional).  The next three lines are self-explanatory; things get interesting on line four:\r\n\r\n`        \"    c : int | obj.c.uuid;\", //store an integer ID for this.c instead of actual object`\r\n\r\nThe code right of | is a \"helper script\", a line of JS code that tells STRUCT how to serialize a given object method.  In this case, we want to save the integer UUID of a referenced object (note that 'obj' represents the a SomeClass instance's 'this').  \r\n\r\nWe can still save the whole object if we want, so long as it's constructor is registered with STRUCT):\r\n\r\n`        \"    d : SomeOtherClass;\", //store full object`\r\n\r\n# Arrays\r\n\r\nIf we want to save an array, we can use:\r\n\r\n`       \"  some_array : array(SomeType);\"`\r\n\r\nWhat if we want to transform the items in the array?  STRUCT provides a simple map mechanism for that:\r\n\r\n`       \" some_array : array(item, SomeType) | [do something with item];\"`\r\n\r\nThe helper JS code will be called once for each item in some_array, rather than once.  If, however, you want the helper code to only be executed once (for the whole array), simply emit the first argument:\r\n\r\n`       \"  some_array : array(SomeType) | [do something with obj.some_array];\"`\r\n\r\n# Abstract Classes\r\n\r\nWhat if you don't know the exact class of a property?  In that case, you use the abstract keyword:\r\n\r\n`       \"  some_property : abstract(SomeBaseClass);\"`\r\n\r\nThis tells STRUCT that some_property may be a subclass of SomeBaseClass.  Since STRUCT is designed to be very compact, objects are normally saved without any sort of type information; the abstract keyword simply tells STRUCT to write a type ID before some_property.\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\dev\\nstructjs\\wiki\\Reading-And-Writing.md",
    "name": "./wiki/Reading-And-Writing.md",
    "content": "The API for serializing a STRUCT-registered class instance is straightforward enough:\r\n\r\n    var data = [];\r\n    nstructjs.manager.write_object(data, anObject);\r\n\r\nThe API for reading files is slightly different.  Let's have STRUCT read the data it just wrote:\r\n\r\n    data = new DataView(new Uint8Array(data).buffer); \r\n    //STRUCT reads from DataViews, but writes to simple arrays\r\n    var anObject2 = nstructjs.manager.read_object(data, anObject.constructor);\r\n\r\n# Handling data structure changes\r\n\r\n## Writing STRUCT scripts with file data\r\n\r\nSTRUCT has facilities to handle changes in data structures.  The basic idea is to save a copy of the STRUCT scripts used to generate a given file inside that file.  You generate this copy with `nstructjs.write_scripts()`, which you save before the file contents with nstructjs.binpack.write_string.  Note that **you must use `nstructjs.write_scripts()`,** or else the abstract keyword will not work.\r\n\r\nTo save space, the 'abstract' keyword does not store the full type of an object, instead it stores an integer ID reference to that object's type within the STRUCT system.  These IDs are assigned by a simple incrementer; thus, any changes to the _order_ of STRUCT registrations will change extant IDs.\r\n\r\nThis is where `nstructjs.write_scripts()` comes in: If you look at its output, you'll see stuff like this:\r\n\r\n    mymodule.SomeClass id=1 {\r\n    }\r\n\r\n### File Writing Example\r\nHere's a simple example of generating a file with embedded STRUCT scripts:\r\n\r\n    var data = [];\r\n    //generate id-enabled struct scripts.  note that helper JS code will be excluded.\r\n    var scripts = nstructjs.write_scripts()\r\n    \r\n    //write utf8 representation of scripts.\r\n    nstructjs.binpack.pack_string(data, scripts);\r\n\r\n    //write object\r\n    nstructjs.manager.write_object(anObject);\r\n    \r\n## Reading saved STRUCT scripts\r\n\r\nContinuing the example above, we need to load a file with the STRUCT scripts saved in that file.  To do so,\r\nwe have to create our own instance of nstructjs.STRUCT (the class of nstructjs.manager):\r\n    \r\n    var load_manager = new nstructjs.STRUCT();\r\n\r\nAnd then feed it the saved scripts buffer.  Assuming we have the output of the previous example, we have to first get a DataView:\r\n\r\n`    data = new DataView(new Uint8Array(data).buffer);`\r\n\r\nThen we have to create a \"unpack context,\" which is basically an ArrayBuffer file pointer:\r\n\r\n    //create unpack context\r\n    var uctx = new nstructjs.binpack.unpack_ctx();\r\n\r\nNext, we read the scripts definition string:\r\n\r\n`    var scripts = nstructjs.binpack.unpack_string(data, uctx);`\r\n\r\nAnd then we feed it to load_manager.\r\n\r\n`    load_manager.parse_structs(scripts);`\r\n\r\nWe can now use load_manager to read the rest of our file:\r\n\r\n`    var anObject2 = load_manager.read_object(data, anObject.constructor, uctx);`\r\n\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "C:\\dev\\nstructjs\\wiki\\Specification.md",
    "name": "./wiki/Specification.md",
    "content": "# Terminology\r\n\r\n# Grammar\r\n\r\n    ID => [a-zA-Z_+][a-zA-Z0-9]*\r\n          ID . ID\r\n\r\n    header => ID {\r\n              ID 'id' = NUMBER {\r\n\r\n    type=>  int\r\n            float\r\n            bool\r\n            byte\r\n            double\r\n            short\r\n            string\r\n            static_string [ NUMBER ]\r\n            ID\r\n            abstract(TYPE)\r\n            array(TYPE)\r\n            array(ITERNAME, TYPE)\r\n            iter(TYPE)\r\n            iter(ITERNAME, TYPE)\r\n\r\n    field => ID : TYPE\r\n             ID : TYPE | JSCODE\r\n    \r\n    fieldlist => field ;\r\n                 fieldlist field ;\r\n               \r\n    STRUCT => header fieldlist }\r\n\r\n# Semantics\r\n## Endianness\r\n\r\nData shall be written in network (big) byte order.\r\n\r\n## Type definitions\r\n### int \r\nThe 'int' type is defined to be a signed 32-bit integer\r\n\r\n## byte\r\nThe 'byte' type is defined to be an unsigned 8-bit integer.\r\n\r\n## bool\r\nThe 'bool' type is defined to be an unsigned 8-bit integer.\r\nIs cast to a boolean when read from file.\r\n\r\n### float\r\nThe 'float' type is defined to be a signed 32-bit float\r\n\r\n### double\r\nThe 'double' type is defined to be a signed 64-bit float\r\n\r\n### short\r\nThe 'short' type is defined to be a signed 16-bit signed integer\r\n\r\n### string\r\nThe string type is defined to be an unsigned array of 8-bit integers, encoded with UTF8.\r\n#### Semantics\r\nStrings shall be written in these steps:\r\n\r\n1. Write size of final, encoded byte array as a signed 32-bit integer.\r\n1. Write encoded byte array.\r\n\r\n## static_string\r\nThe static_string type is a fixed-sized unsigned array of 8-bit integers.  String data that is too long must be truncated to fit within the array; data is too short must be padded with zeros.\r\n\r\n## Object type\r\nObject types declared without abstract() are written via their STRUCT definitions.\r\n\r\n## Abstract object type\r\nObject types saved with abstract() must save a signed integer ID referencing their struct definition within the STRUCT manager that created them, then write the object as above.\r\n\r\n## Array\r\nArrays may be variable length, of any valid STRUCT type, including abstract types.  \r\n### Semantics\r\nTo write an array:\r\n\r\n 1. Write a 32-bit signed integer representing array length\r\n 2. Write each array item according to STRUCT type rules.\r\n\r\n## Iter\r\nThe Iter type is written identically to Array, but relaxes the requirement for direct, contiguous arrays for whatever iterator protocol is appropriate for the language (which differs between ES5.1 and ES6).\r\n\r\n",
    "static": true,
    "access": "public"
  }
]